const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ownerOf-9tojnPl2.js","assets/index-MmD_uyqy.js","assets/index-Q7zLqut_.css","assets/detectExtension-CRMibtJ3.js"])))=>i.map(i=>d[i]);
import{C as d,ar as u,_ as o,as as a}from"./index-MmD_uyqy.js";import{f as s}from"./fetchTokenMetadata-DC7WIA2B.js";const I="0xc87b56dd",k=[{name:"_tokenId",type:"uint256"}],l=[{type:"string"}];async function y(t){return d({contract:t.contract,method:[I,k,l],params:[t.tokenId]})}const f="0x4f6ccce7",h=[{name:"_index",type:"uint256"}],_=[{type:"uint256"}];async function m(t){return d({contract:t.contract,method:[f,h,_],params:[t.index]})}async function w(t){const{useIndexer:c=!0}=t;if(c)try{return await T(t)}catch{return await e(t)}return await e(t)}async function T(t){const c=await u({chain:t.contract.chain,client:t.contract.client,contractAddress:t.contract.address,includeOwners:t.includeOwner,tokenId:t.tokenId});return c||e(t)}async function e(t){let c=t.tokenId;if(t.tokenByIndex)try{c=await m({contract:t.contract,index:t.tokenId})}catch{}const[n,r]=await Promise.all([y({contract:t.contract,tokenId:c}).catch(()=>null),t.includeOwner?o(()=>import("./ownerOf-9tojnPl2.js"),__vite__mapDeps([0,1,2,3])).then(i=>i.ownerOf({contract:t.contract,tokenId:c})).catch(()=>null):null]);return n?.trim()?a(await s({client:t.contract.client,tokenId:c,tokenUri:n}).catch(()=>({id:c,type:"ERC721",uri:n})),{chainId:t.contract.chain.id,owner:r,tokenAddress:t.contract.address,tokenId:c,tokenUri:n,type:"ERC721"}):a({id:c,type:"ERC721",uri:""},{chainId:t.contract.chain.id,owner:r,tokenAddress:t.contract.address,tokenId:c,tokenUri:"",type:"ERC721"})}export{w as getNFT};
