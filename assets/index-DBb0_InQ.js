import{cl as ne,cm as re,cn as Pe,co as Ce,cp as _e,cq as U,cr as Re,cs as Be,ct as Fe,cu as Ue,cv as ke,cw as Ne,cx as Le,cy as qe,cz as ee,cA as fe,cB as he,bK as H,cC as Me,cD as De,cE as $e,cF as T,cG as ze,cH as Ge,cI as He,cJ as Oe,cK as k,cL as N,cM as V,cN as Ve,an as We,aB as je,cO as Ke,aC as L,cP as X,c9 as q,af as me,ap as p,cQ as Je,cR as Ye,cS as Ze,cT as $,cU as se,bL as Qe,cV as Xe,cW as et,cX as tt,cY as nt,cZ as rt,c_ as st,c$ as W,_ as at,d0 as ae,d1 as le,d2 as ot,F as ge,d3 as it,d4 as j,d5 as ct,d6 as ut,Q as dt,d7 as ft,aj as te,d8 as P,d9 as ht,da as M,db as w,dc as mt,dd as lt,de as gt,df as pt,dg as yt,dh as xt,di as Et,dj as bt,dk as oe,dl as wt,dm as It,dn as vt,dp as Tt,dq as St,dr as At,ds as Pt,dt as Ct,du as _t,dv as ie,dw as Rt,dx as Bt,dy as pe,dz as Ft}from"./index-Atmi8JGg.js";import{fI as Ir,fJ as vr,fK as Tr,fL as Sr,fM as Ar,fN as Pr,fO as Cr,fP as _r,fQ as Rr,fR as Br,fS as Fr,fT as Ur,fU as kr,fV as Nr,h2 as Lr,gF as qr,gE as Mr,go as Dr,g1 as $r,g2 as zr,gG as Gr,g8 as Hr,gH as Or,g3 as Vr,g4 as Wr,g5 as jr,dA as Kr,g6 as Jr,g9 as Yr,ga as Zr,gb as Qr,gc as Xr,fW as es,fX as ts,gI as ns,gp as rs,gk as ss,gl as as,gm as os,gn as is,gs as cs,gt as us,gu as ds,h4 as fs,gr as hs,ao as ms,gv as ls,gg as gs,gJ as ps,gw as ys,gx as xs,fY as Es,fZ as bs,dB as ws,dC as Is,dD as vs,f_ as Ts,gh as Ss,g7 as As,f$ as Ps,hb as Cs,dE as _s,gi as Rs,gK as Bs,dF as Fs,dG as Us,gL as ks,dH as Ns,hc as Ls,gM as qs,h5 as Ms,dI as Ds,h6 as $s,dJ as zs,hd as Gs,gN as Hs,gO as Os,gq as Vs,gP as Ws,gQ as js,gy as Ks,gz as Js,gA as Ys,gR as Zs,gS as Qs,gT as Xs,gd as ea,gU as ta,gV as na,gW as ra,ge as sa,gj as aa,gf as oa,dN as ia,h3 as ca,S as ua,gB as da,h7 as fa,h8 as ha,h9 as ma,gX as la,gC as ga,gY as pa,gZ as ya,gD as xa,g_ as Ea,dO as ba,dP as wa,g$ as Ia,h0 as va,h1 as Ta,U as Sa,dQ as Aa,ha as Pa,hu as Ca,ia as _a,hq as Ra,hr as Ba,hI as Fa,hA as Ua,hB as ka,hC as Na,hL as La,hD as qa,hp as Ma,hs as Da,hx as $a,dS as za,dT as Ga,dW as Ha,ai as Oa,he as Va,hf as Wa,hg as ja,hQ as Ka,hv as Ja,hT as Ya,hW as Za,hY as Qa,e7 as Xa,e8 as eo,id as to,hh as no,hi as ro,hj as so,hk as ao,hl as oo,e1 as io,d_ as co,d$ as uo,e2 as fo,e3 as ho,e9 as mo,e0 as lo,e5 as go,dX as po,hR as yo,ie as xo,ig as Eo,hS as bo,hU as wo,hX as Io,ih as vo,hE as To,hF as So,hm as Ao,hw as Po,hP as Co,i0 as _o,i1 as Ro,G as Bo,i1 as Fo,ib as Uo,o as ko,i4 as No,i5 as Lo,hG as qo,hM as Mo,i6 as Do,hH as $o,dZ as zo,hN as Go,em as Ho,en as Oo,eo as Vo,ep as Wo,eq as jo,er as Ko,es as Jo,eb as Yo,et as Zo,eu as Qo,ev as Xo,ew as ei,ex as ti,ey as ni,ez as ri,eA as si,eB as ai,eC as oi,ec as ii,eD as ci,eE as ui,eF as di,ed as fi,ee as hi,ef as mi,eg as li,eh as gi,ei as pi,ea as yi,ej as xi,ek as Ei,el as bi,eS as wi,eT as Ii,eU as vi,eV as Ti,eW as Si,eX as Ai,eY as Pi,eH as Ci,eZ as _i,e_ as Ri,e$ as Bi,f0 as Fi,f1 as Ui,f2 as ki,f3 as Ni,f4 as Li,f5 as qi,f6 as Mi,eI as Di,f7 as $i,f8 as zi,f9 as Gi,eJ as Hi,eK as Oi,eL as Vi,eM as Wi,eN as ji,eO as Ki,eG as Ji,eP as Yi,eQ as Zi,eR as Qi,fm as Xi,fn as ec,fo as tc,fp as nc,fq as rc,fr as sc,fs as ac,fb as oc,ft as ic,fu as cc,fv as uc,fw as dc,fx as fc,fy as hc,fz as mc,fA as lc,fB as gc,fC as pc,fc as yc,fD as xc,fE as Ec,fF as bc,fd as wc,fe as Ic,ff as vc,fg as Tc,fh as Sc,fi as Ac,fa as Pc,fj as Cc,fk as _c,fl as Rc,e4 as Bc,hO as Fc,hJ as Uc,hy as kc,dK as Nc,dL as Lc,dM as qc,hn as Mc,i6 as Dc,ho as $c,fG as zc,dU as Gc,i7 as Hc,dR as Oc,hZ as Vc,ic as Wc,i8 as jc,q as Kc,g0 as Jc,h_ as Yc,dY as Zc,i8 as Qc,hz as Xc,hK as eu,ah as tu,ht as nu,h$ as ru,i0 as su,i1 as au,h$ as ou,G as iu,i1 as cu,i9 as uu,hV as du,e3 as fu,e9 as hu,v as mu,dV as lu,fH as gu,i2 as pu,i3 as yu,e6 as xu}from"./index-Atmi8JGg.js";import{ccipRequest as bu,ccipRequest as wu,offchainLookup as Iu,offchainLookupAbiItem as vu,offchainLookupSignature as Tu}from"./ccip-Clo0iwCM.js";function On(e){let t;if(typeof e=="string")t=ne(e,{modifiers:re});else{const n=Pe(e),r=e.length;for(let s=0;s<r;s++){const a=e[s];if(!Ce(a)){t=ne(a,{modifiers:re,structs:n});break}}}if(!t)throw new _e({param:e});return t}function Vn({abi:e,address:t,client:n}){const r=n,[s,a]=r?"public"in r&&"wallet"in r?[r.public,r.wallet]:"public"in r?[r.public,void 0]:"wallet"in r?[void 0,r.wallet]:[r,r]:[void 0,void 0],d=s!=null,u=a!=null,c={};let o=!1,h=!1,f=!1;for(const l of e)if(l.type==="function"?l.stateMutability==="view"||l.stateMutability==="pure"?o=!0:h=!0:l.type==="event"&&(f=!0),o&&h&&f)break;return d&&(o&&(c.read=new Proxy({},{get(l,i){return(...m)=>{const{args:g,options:y}=z(m);return U(s,Re,"readContract")({abi:e,address:t,functionName:i,args:g,...y})}}})),h&&(c.simulate=new Proxy({},{get(l,i){return(...m)=>{const{args:g,options:y}=z(m);return U(s,Be,"simulateContract")({abi:e,address:t,functionName:i,args:g,...y})}}})),f&&(c.createEventFilter=new Proxy({},{get(l,i){return(...m)=>{const g=e.find(b=>b.type==="event"&&b.name===i),{args:y,options:E}=Y(m,g);return U(s,Fe,"createContractEventFilter")({abi:e,address:t,eventName:i,args:y,...E})}}}),c.getEvents=new Proxy({},{get(l,i){return(...m)=>{const g=e.find(b=>b.type==="event"&&b.name===i),{args:y,options:E}=Y(m,g);return U(s,Ue,"getContractEvents")({abi:e,address:t,eventName:i,args:y,...E})}}}),c.watchEvent=new Proxy({},{get(l,i){return(...m)=>{const g=e.find(b=>b.type==="event"&&b.name===i),{args:y,options:E}=Y(m,g);return U(s,ke,"watchContractEvent")({abi:e,address:t,eventName:i,args:y,...E})}}}))),u&&h&&(c.write=new Proxy({},{get(l,i){return(...m)=>{const{args:g,options:y}=z(m);return U(a,Ne,"writeContract")({abi:e,address:t,functionName:i,args:g,...y})}}})),(d||u)&&h&&(c.estimateGas=new Proxy({},{get(l,i){return(...m)=>{const{args:g,options:y}=z(m);return U(s??a,Le,"estimateContractGas")({abi:e,address:t,functionName:i,args:g,...y,account:y.account??a.account})}}})),c.address=t,c.abi=e,c}function z(e){const t=e.length&&Array.isArray(e[0]),n=t?e[0]:[],r=(t?e[1]:e[0])??{};return{args:n,options:r}}function Y(e,t){let n=!1;Array.isArray(e[0])?n=!0:e.length===1?n=t.inputs.some(a=>a.indexed):e.length===2&&(n=!0);const r=n?e[0]:void 0,s=(n?e[1]:e[0])??{};return{args:r,options:s}}function Wn(e,t){if(e.length!==t.length)throw new qe({expectedLength:e.length,givenLength:t.length});const n=[];for(let r=0;r<e.length;r++){const s=e[r],a=t[r];n.push(ye(s,a))}return ee(n)}function ye(e,t,n=!1){if(e==="address"){const d=t;if(!fe(d))throw new he({address:d});return H(d.toLowerCase(),{size:n?32:null})}if(e==="string")return Me(t);if(e==="bytes")return t;if(e==="bool")return H(De(t),{size:n?32:1});const r=e.match($e);if(r){const[d,u,c="256"]=r,o=Number.parseInt(c,10)/8;return T(t,{size:n?32:o,signed:u==="int"})}const s=e.match(ze);if(s){const[d,u]=s;if(Number.parseInt(u,10)!==(t.length-2)/2)throw new Ge({expectedSize:Number.parseInt(u,10),givenSize:(t.length-2)/2});return H(t,{dir:"right",size:n?32:null})}const a=e.match(He);if(a&&Array.isArray(t)){const[d,u]=a,c=[];for(let o=0;o<t.length;o++)c.push(ye(u,t[o],!0));return c.length===0?"0x":ee(c)}throw new Oe(e)}function ce(e){return!e||typeof e!="object"||!("BYTES_PER_ELEMENT"in e)?!1:e.BYTES_PER_ELEMENT===1&&e.constructor.name==="Uint8Array"}function jn(e){return e.opcode==="CREATE2"?kt(e):Ut(e)}function Ut(e){const t=k(N(e.from));let n=k(e.nonce);return n[0]===0&&(n=new Uint8Array([])),N(`0x${V(je([t,n],"bytes")).slice(26)}`)}function kt(e){const t=k(N(e.from)),n=H(ce(e.salt)?e.salt:k(e.salt),{size:32}),r="bytecodeHash"in e?ce(e.bytecodeHash)?e.bytecodeHash:k(e.bytecodeHash):V(e.bytecode,"bytes");return N(Ve(V(We([k("0xff"),t,n,r])),12))}function Kn({chains:e,id:t}){return e.find(n=>n.id===t)}function xe(e,t="hex"){const n=(()=>{if(typeof e=="string"){if(e.length>3&&e.length%2!==0)throw new Ke(e);return L(e)}return e})(),r=X(n,{recursiveReadLimit:Number.POSITIVE_INFINITY});return Ee(r,t)}function Ee(e,t="hex"){if(e.bytes.length===0)return t==="hex"?q(e.bytes):e.bytes;const n=e.readByte();if(n<128&&e.decrementPosition(1),n<192){const s=ue(e,n,128),a=e.readBytes(s);return t==="hex"?q(a):a}const r=ue(e,n,192);return Nt(e,r,t)}function ue(e,t,n){if(n===128&&t<128)return 1;if(t<=n+55)return t-n;if(t===n+55+1)return e.readUint8();if(t===n+55+2)return e.readUint16();if(t===n+55+3)return e.readUint24();if(t===n+55+4)return e.readUint32();throw new me("Invalid RLP prefix")}function Nt(e,t,n){const r=e.position,s=[];for(;e.position-r<t;)s.push(Ee(e,n));return s}function Lt(e){return p(e)&&Je(e)===32}const qt=Uint8Array.from([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),be=Uint8Array.from(new Array(16).fill(0).map((e,t)=>t)),Mt=be.map(e=>(9*e+5)%16),we=(()=>{const n=[[be],[Mt]];for(let r=0;r<4;r++)for(let s of n)s.push(s[r].map(a=>qt[a]));return n})(),Ie=we[0],ve=we[1],Te=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(e=>Uint8Array.from(e)),Dt=Ie.map((e,t)=>e.map(n=>Te[t][n])),$t=ve.map((e,t)=>e.map(n=>Te[t][n])),zt=Uint32Array.from([0,1518500249,1859775393,2400959708,2840853838]),Gt=Uint32Array.from([1352829926,1548603684,1836072691,2053994217,0]);function de(e,t,n,r){return e===0?t^n^r:e===1?t&n|~t&r:e===2?(t|~n)^r:e===3?t&r|n&~r:t^(n|~r)}const G=new Uint32Array(16);class Ht extends Ze{constructor(){super(64,20,8,!0),this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){const{h0:t,h1:n,h2:r,h3:s,h4:a}=this;return[t,n,r,s,a]}set(t,n,r,s,a){this.h0=t|0,this.h1=n|0,this.h2=r|0,this.h3=s|0,this.h4=a|0}process(t,n){for(let i=0;i<16;i++,n+=4)G[i]=t.getUint32(n,!0);let r=this.h0|0,s=r,a=this.h1|0,d=a,u=this.h2|0,c=u,o=this.h3|0,h=o,f=this.h4|0,l=f;for(let i=0;i<5;i++){const m=4-i,g=zt[i],y=Gt[i],E=Ie[i],b=ve[i],S=Dt[i],A=$t[i];for(let v=0;v<16;v++){const x=$(r+de(i,a,u,o)+G[E[v]]+g,S[v])+f|0;r=f,f=o,o=$(u,10)|0,u=a,a=x}for(let v=0;v<16;v++){const x=$(s+de(m,d,c,h)+G[b[v]]+y,A[v])+l|0;s=l,l=h,h=$(c,10)|0,c=d,d=x}}this.set(this.h1+u+h|0,this.h2+o+l|0,this.h3+f+s|0,this.h4+r+d|0,this.h0+a+c|0)}roundClean(){se(G)}destroy(){this.destroyed=!0,se(this.buffer),this.set(0,0,0,0,0)}}const Ot=Ye(()=>new Ht),Vt=Ot;function Jn(e,t){const n=t||"hex",r=Vt(p(e,{strict:!1})?k(e):e);return n==="bytes"?r:Qe(r)}function Wt(e){const{source:t}=e,n=new Map,r=new Xe(8192),s=new Map,a=({address:d,chainId:u})=>`${d}.${u}`;return{async consume({address:d,chainId:u,client:c}){const o=a({address:d,chainId:u}),h=this.get({address:d,chainId:u,client:c});this.increment({address:d,chainId:u});const f=await h;return await t.set({address:d,chainId:u},f),r.set(o,f),f},async increment({address:d,chainId:u}){const c=a({address:d,chainId:u}),o=n.get(c)??0;n.set(c,o+1)},async get({address:d,chainId:u,client:c}){const o=a({address:d,chainId:u});let h=s.get(o);return h||(h=(async()=>{try{const l=await t.get({address:d,chainId:u,client:c}),i=r.get(o)??0;return i>0&&l<=i?i+1:(r.delete(o),l)}finally{this.reset({address:d,chainId:u})}})(),s.set(o,h)),(n.get(o)??0)+await h},reset({address:d,chainId:u}){const c=a({address:d,chainId:u});n.delete(c),s.delete(c)}}}function jt(){return{async get(e){const{address:t,client:n}=e;return et(n,{address:t,blockTag:"pending"})},set(){}}}const Yn=Wt({source:jt()}),Z=new Map;async function Kt(e){const{getSocket:t,keepAlive:n=!0,key:r="socket",reconnect:s=!0,url:a}=e,{interval:d=3e4}=typeof n=="object"?n:{},{attempts:u=5,delay:c=2e3}=typeof s=="object"?s:{},o=JSON.stringify({keepAlive:n,key:r,url:a,reconnect:s});let h=Z.get(o);if(h)return h;let f=0;const{schedule:l}=tt({id:o,fn:async()=>{const g=new Map,y=new Map;let E,b,S,A=!1;function v(){if(s&&f<u){if(A)return;A=!0,f++,b?.close(),setTimeout(async()=>{await x().catch(console.error),A=!1},c)}else g.clear(),y.clear()}async function x(){const C=await t({onClose(){for(const I of g.values())I.onError?.(new W({url:a}));for(const I of y.values())I.onError?.(new W({url:a}));v()},onError(I){E=I;for(const _ of g.values())_.onError?.(E);for(const _ of y.values())_.onError?.(E);v()},onOpen(){E=void 0,f=0},onResponse(I){const _=I.method==="eth_subscription",B=_?I.params.subscription:I.id,F=_?y:g,R=F.get(B);R&&R.onResponse(I),_||F.delete(B)}});if(b=C,n&&(S&&clearInterval(S),S=setInterval(()=>b.ping?.(),d)),s&&y.size>0){const I=y.entries();for(const[_,{onResponse:B,body:F,onError:R}]of I)F&&(y.delete(_),h?.request({body:F,onResponse:B,onError:R}))}return C}return await x(),E=void 0,h={close(){S&&clearInterval(S),b.close(),Z.delete(o)},get socket(){return b},request({body:C,onError:I,onResponse:_}){E&&I&&I(E);const B=C.id??st.take(),F=R=>{typeof R.id=="number"&&B!==R.id||(C.method==="eth_subscribe"&&typeof R.result=="string"&&y.set(R.result,{onResponse:F,onError:I,body:C}),C.method==="eth_unsubscribe"&&y.delete(C.params?.[0]),_(R))};g.set(B,{onResponse:F,onError:I});try{b.request({body:{jsonrpc:"2.0",id:B,...C}})}catch(R){I?.(R)}},requestAsync({body:C,timeout:I=1e4}){return nt(()=>new Promise((_,B)=>this.request({body:C,onError:B,onResponse:_})),{errorInstance:new rt({body:C,url:a}),timeout:I})},requests:g,subscriptions:y,url:a},Z.set(o,h),[h]}}),[i,[m]]=await l();return m}async function O(e,t={}){const{keepAlive:n,reconnect:r}=t;return Kt({async getSocket({onClose:s,onError:a,onOpen:d,onResponse:u}){const c=await at(()=>import("./native-B8WyFf_Z.js"),[]).then(i=>i.WebSocket),o=new c(e);function h(){o.removeEventListener("close",h),o.removeEventListener("message",f),o.removeEventListener("error",a),o.removeEventListener("open",d),s()}function f({data:i}){if(!(typeof i=="string"&&i.trim().length===0))try{const m=JSON.parse(i);u(m)}catch(m){a(m)}}o.addEventListener("close",h),o.addEventListener("message",f),o.addEventListener("error",a),o.addEventListener("open",d),o.readyState===c.CONNECTING&&await new Promise((i,m)=>{o&&(o.onopen=i,o.onerror=m)});const{close:l}=o;return Object.assign(o,{close(){l.bind(o)(),h()},ping(){try{if(o.readyState===o.CLOSED||o.readyState===o.CLOSING)throw new ae({url:o.url,cause:new W({url:o.url})});const i={jsonrpc:"2.0",id:null,method:"net_version",params:[]};o.send(JSON.stringify(i))}catch(i){a(i)}},request({body:i}){if(o.readyState===o.CLOSED||o.readyState===o.CLOSING)throw new ae({body:i,url:o.url,cause:new W({url:o.url})});return o.send(JSON.stringify(i))}})},keepAlive:n,reconnect:r,url:e})}async function Jt(e){const t=await O(e);return Object.assign(t.socket,{requests:t.requests,subscriptions:t.subscriptions})}const Se="0x6492649264926492649264926492649264926492649264926492649264926492",Zn="0x0000000000000000000000000000000000000000000000000000000000000000";function Yt(e){return le(e,-32)===Se}function Zt(e){return ot(e)}function Qn(e){if(!Yt(e))return{signature:e};const[t,n,r]=ge([{type:"address"},{type:"bytes"},{type:"bytes"}],e);return{address:t,data:n,signature:r}}function Xn(e){if(!Zt(e))return{signature:e};const{authorization:t,to:n,...r}=it(e);return{authorization:{address:t.address,chainId:t.chainId,nonce:Number(t.nonce),r:T(t.r,{size:32}),s:T(t.s,{size:32}),yParity:t.yParity},...n?{address:n}:{},...r}}async function Qt({message:e,signature:t}){return j({hash:ct(e),signature:t})}async function Xt(e){const{domain:t,message:n,primaryType:r,signature:s,types:a}=e;return j({hash:ut({domain:t,message:n,primaryType:r,types:a}),signature:s})}function er(e){const{address:t,data:n,signature:r,to:s="hex"}=e,a=ee([dt([{type:"address"},{type:"bytes"},{type:"bytes"}],[t,n,r]),Se]);return s==="hex"?a:L(a)}function tr(e){const{address:t,data:n,signature:r,to:s="hex"}=e,a=ft({authorization:{address:e.authorization.address,chainId:e.authorization.chainId,nonce:BigInt(e.authorization.nonce),r:BigInt(e.authorization.r),s:BigInt(e.authorization.s),yParity:e.authorization.yParity},data:n,signature:r,to:t});return s==="hex"?a:L(a)}async function nr({address:e,hash:t,signature:n}){return te(N(e),await j({hash:t,signature:n}))}async function rr({address:e,message:t,signature:n}){return te(N(e),await Qt({message:t,signature:n}))}async function sr(e){const{address:t,domain:n,message:r,primaryType:s,signature:a,types:d}=e;return te(N(t),await Xt({domain:n,message:r,primaryType:s,signature:a,types:d}))}function en(e){const t=le(e,0,1);if(t==="0x04")return"eip7702";if(t==="0x03")return"eip4844";if(t==="0x02")return"eip1559";if(t==="0x01")return"eip2930";if(t!=="0x"&&P(t)>=192)return"legacy";throw new ht({serializedType:t})}function tn(e){const t=en(e);return t==="eip1559"?sn(e):t==="eip2930"?an(e):t==="eip4844"?rn(e):t==="eip7702"?nn(e):on(e)}function nn(e){const t=K(e),[n,r,s,a,d,u,c,o,h,f,l,i,m]=t;if(t.length!==10&&t.length!==13)throw new M({attributes:{chainId:n,nonce:r,maxPriorityFeePerGas:s,maxFeePerGas:a,gas:d,to:u,value:c,data:o,accessList:h,authorizationList:f,...t.length>9?{v:l,r:i,s:m}:{}},serializedTransaction:e,type:"eip7702"});const g={chainId:P(n),type:"eip7702"};return p(u)&&u!=="0x"&&(g.to=u),p(d)&&d!=="0x"&&(g.gas=w(d)),p(o)&&o!=="0x"&&(g.data=o),p(r)&&(g.nonce=r==="0x"?0:P(r)),p(c)&&c!=="0x"&&(g.value=w(c)),p(a)&&a!=="0x"&&(g.maxFeePerGas=w(a)),p(s)&&s!=="0x"&&(g.maxPriorityFeePerGas=w(s)),h.length!==0&&h!=="0x"&&(g.accessList=J(h)),f.length!==0&&f!=="0x"&&(g.authorizationList=cn(f)),yt(g),{...t.length===13?D(t):void 0,...g}}function rn(e){const t=K(e),n=t.length===4,r=n?t[0]:t,s=n?t.slice(1):[],[a,d,u,c,o,h,f,l,i,m,g,y,E,b]=r,[S,A,v]=s;if(!(r.length===11||r.length===14))throw new M({attributes:{chainId:a,nonce:d,maxPriorityFeePerGas:u,maxFeePerGas:c,gas:o,to:h,value:f,data:l,accessList:i,...r.length>9?{v:y,r:E,s:b}:{}},serializedTransaction:e,type:"eip4844"});const x={blobVersionedHashes:g,chainId:P(a),type:"eip4844"};return p(h)&&h!=="0x"&&(x.to=h),p(o)&&o!=="0x"&&(x.gas=w(o)),p(l)&&l!=="0x"&&(x.data=l),p(d)&&(x.nonce=d==="0x"?0:P(d)),p(f)&&f!=="0x"&&(x.value=w(f)),p(m)&&m!=="0x"&&(x.maxFeePerBlobGas=w(m)),p(c)&&c!=="0x"&&(x.maxFeePerGas=w(c)),p(u)&&u!=="0x"&&(x.maxPriorityFeePerGas=w(u)),i.length!==0&&i!=="0x"&&(x.accessList=J(i)),S&&A&&v&&(x.sidecars=gt({blobs:S,commitments:A,proofs:v})),pt(x),{...r.length===14?D(r):void 0,...x}}function sn(e){const t=K(e),[n,r,s,a,d,u,c,o,h,f,l,i]=t;if(!(t.length===9||t.length===12))throw new M({attributes:{chainId:n,nonce:r,maxPriorityFeePerGas:s,maxFeePerGas:a,gas:d,to:u,value:c,data:o,accessList:h,...t.length>9?{v:f,r:l,s:i}:{}},serializedTransaction:e,type:"eip1559"});const m={chainId:P(n),type:"eip1559"};return p(u)&&u!=="0x"&&(m.to=u),p(d)&&d!=="0x"&&(m.gas=w(d)),p(o)&&o!=="0x"&&(m.data=o),p(r)&&(m.nonce=r==="0x"?0:P(r)),p(c)&&c!=="0x"&&(m.value=w(c)),p(a)&&a!=="0x"&&(m.maxFeePerGas=w(a)),p(s)&&s!=="0x"&&(m.maxPriorityFeePerGas=w(s)),h.length!==0&&h!=="0x"&&(m.accessList=J(h)),mt(m),{...t.length===12?D(t):void 0,...m}}function an(e){const t=K(e),[n,r,s,a,d,u,c,o,h,f,l]=t;if(!(t.length===8||t.length===11))throw new M({attributes:{chainId:n,nonce:r,gasPrice:s,gas:a,to:d,value:u,data:c,accessList:o,...t.length>8?{v:h,r:f,s:l}:{}},serializedTransaction:e,type:"eip2930"});const i={chainId:P(n),type:"eip2930"};return p(d)&&d!=="0x"&&(i.to=d),p(a)&&a!=="0x"&&(i.gas=w(a)),p(c)&&c!=="0x"&&(i.data=c),p(r)&&(i.nonce=r==="0x"?0:P(r)),p(u)&&u!=="0x"&&(i.value=w(u)),p(s)&&s!=="0x"&&(i.gasPrice=w(s)),o.length!==0&&o!=="0x"&&(i.accessList=J(o)),lt(i),{...t.length===11?D(t):void 0,...i}}function on(e){const t=xe(e,"hex"),[n,r,s,a,d,u,c,o,h]=t;if(!(t.length===6||t.length===9))throw new M({attributes:{nonce:n,gasPrice:r,gas:s,to:a,value:d,data:u,...t.length>6?{v:c,r:o,s:h}:{}},serializedTransaction:e,type:"legacy"});const f={type:"legacy"};if(p(a)&&a!=="0x"&&(f.to=a),p(s)&&s!=="0x"&&(f.gas=w(s)),p(u)&&u!=="0x"&&(f.data=u),p(n)&&(f.nonce=n==="0x"?0:P(n)),p(d)&&d!=="0x"&&(f.value=w(d)),p(r)&&r!=="0x"&&(f.gasPrice=w(r)),xt(f),t.length===6)return f;const l=p(c)&&c!=="0x"?w(c):0n;if(h==="0x"&&o==="0x")return l>0&&(f.chainId=Number(l)),f;const i=l,m=Number((i-35n)/2n);if(m>0)f.chainId=m;else if(i!==27n&&i!==28n)throw new Et({v:i});return f.v=i,f.s=h,f.r=o,f.yParity=i%2n===0n?1:0,f}function K(e){return xe(`0x${e.slice(4)}`,"hex")}function J(e){const t=[];for(let n=0;n<e.length;n++){const[r,s]=e[n];if(!fe(r,{strict:!1}))throw new he({address:r});t.push({address:r,storageKeys:s.map(a=>Lt(a)?a:bt(a))})}return t}function cn(e){const t=[];for(let n=0;n<e.length;n++){const[r,s,a,d,u,c]=e[n];t.push({address:s,chainId:r==="0x"?0:P(r),nonce:a==="0x"?0:P(a),...D([d,u,c])})}return t}function D(e){const t=e.slice(-3),n=t[0]==="0x"||w(t[0])===0n?27n:28n;return{r:oe(t[1],{size:32}),s:oe(t[2],{size:32}),v:n,yParity:n===27n?0:1}}class un extends me{constructor({value:t}){super(`Number \`${t}\` is not a valid decimal number.`,{name:"InvalidDecimalNumberError"})}}function Ae(e,t){if(!/^(-?)([0-9]*)\.?([0-9]*)$/.test(e))throw new un({value:e});let[n,r="0"]=e.split(".");const s=n.startsWith("-");if(s&&(n=n.slice(1)),r=r.replace(/(0+)$/,""),t===0)Math.round(+`.${r}`)===1&&(n=`${BigInt(n)+1n}`),r="";else if(r.length>t){const[a,d,u]=[r.slice(0,t-1),r.slice(t-1,t),r.slice(t)],c=Math.round(+`${d}.${u}`);c>9?r=`${BigInt(a)+BigInt(1)}0`.padStart(a.length+1,"0"):r=`${a}${c}`,r.length>t&&(r=r.slice(1),n=`${BigInt(n)+1n}`),r=r.slice(0,t)}else r=r.padEnd(t,"0");return BigInt(`${s?"-":""}${n}${r}`)}function ar(e,t="wei"){return Ae(e,wt[t])}function or(e,t="wei"){return Ae(e,It[t])}async function dn(e,{hash:t}){await e.request({method:`${e.mode}_dropTransaction`,params:[t]})}async function fn(e){return e.request({method:`${e.mode}_dumpState`})}async function hn(e){return e.mode==="ganache"?await e.request({method:"eth_mining"}):await e.request({method:`${e.mode}_getAutomine`})}async function mn(e){return await e.request({method:"txpool_content"})}async function ln(e){const{pending:t,queued:n}=await e.request({method:"txpool_status"});return{pending:P(t),queued:P(n)}}async function gn(e,{address:t}){await e.request({method:`${e.mode}_impersonateAccount`,params:[t]})}async function pn(e,{seconds:t}){return await e.request({method:"evm_increaseTime",params:[T(t)]})}async function yn(e){return await e.request({method:"txpool_inspect"})}async function xn(e,{state:t}){await e.request({method:`${e.mode}_loadState`,params:[t]})}async function En(e,{blocks:t,interval:n}){e.mode==="ganache"?await e.request({method:"evm_mine",params:[{blocks:T(t)}]}):await e.request({method:`${e.mode}_mine`,params:[T(t),T(n||0)]})}async function bn(e){await e.request({method:`${e.mode}_removeBlockTimestampInterval`})}async function wn(e,{blockNumber:t,jsonRpcUrl:n}={}){await e.request({method:`${e.mode}_reset`,params:[{forking:{blockNumber:Number(t),jsonRpcUrl:n}}]})}async function In(e,{id:t}){await e.request({method:"evm_revert",params:[t]})}async function vn(e,t){const{accessList:n,data:r,from:s,gas:a,gasPrice:d,maxFeePerGas:u,maxPriorityFeePerGas:c,nonce:o,to:h,value:f,...l}=t,i=e.chain?.formatters?.transactionRequest?.format,g=(i||vt)({...Tt(l,{format:i}),accessList:n,data:r,from:s,gas:a,gasPrice:d,maxFeePerGas:u,maxPriorityFeePerGas:c,nonce:o,to:h,value:f});return await e.request({method:"eth_sendUnsignedTransaction",params:[g]})}async function Tn(e,t){e.mode==="ganache"?t?await e.request({method:"miner_start"}):await e.request({method:"miner_stop"}):await e.request({method:"evm_setAutomine",params:[t]})}async function Sn(e,{address:t,value:n}){e.mode==="ganache"?await e.request({method:"evm_setAccountBalance",params:[t,T(n)]}):await e.request({method:`${e.mode}_setBalance`,params:[t,T(n)]})}async function An(e,{gasLimit:t}){await e.request({method:"evm_setBlockGasLimit",params:[T(t)]})}async function Pn(e,{interval:t}){const n=e.mode==="hardhat"?t*1e3:t;await e.request({method:`${e.mode}_setBlockTimestampInterval`,params:[n]})}async function Cn(e,{address:t,bytecode:n}){e.mode==="ganache"?await e.request({method:"evm_setAccountCode",params:[t,n]}):await e.request({method:`${e.mode}_setCode`,params:[t,n]})}async function _n(e,{address:t}){await e.request({method:`${e.mode}_setCoinbase`,params:[t]})}async function Rn(e,{interval:t}){const n=e.mode==="hardhat"?t*1e3:t;await e.request({method:"evm_setIntervalMining",params:[n]})}async function Bn(e,t){await e.request({method:`${e.mode}_setLoggingEnabled`,params:[t]})}async function Fn(e,{gasPrice:t}){await e.request({method:`${e.mode}_setMinGasPrice`,params:[T(t)]})}async function Un(e,{baseFeePerGas:t}){await e.request({method:`${e.mode}_setNextBlockBaseFeePerGas`,params:[T(t)]})}async function kn(e,{timestamp:t}){await e.request({method:"evm_setNextBlockTimestamp",params:[T(t)]})}async function Nn(e,{address:t,nonce:n}){await e.request({method:`${e.mode}_setNonce`,params:[t,T(n)]})}async function Ln(e,t){await e.request({method:`${e.mode}_setRpcUrl`,params:[t]})}async function qn(e,{address:t,index:n,value:r}){await e.request({method:`${e.mode}_setStorageAt`,params:[t,typeof n=="number"?T(n):n,r]})}async function Mn(e){return await e.request({method:"evm_snapshot"})}async function Dn(e,{address:t}){await e.request({method:`${e.mode}_stopImpersonatingAccount`,params:[t]})}function $n({mode:e}){return t=>{const n=t.extend(()=>({mode:e}));return{dropTransaction:r=>dn(n,r),dumpState:()=>fn(n),getAutomine:()=>hn(n),getTxpoolContent:()=>mn(n),getTxpoolStatus:()=>ln(n),impersonateAccount:r=>gn(n,r),increaseTime:r=>pn(n,r),inspectTxpool:()=>yn(n),loadState:r=>xn(n,r),mine:r=>En(n,r),removeBlockTimestampInterval:()=>bn(n),reset:r=>wn(n,r),revert:r=>In(n,r),sendUnsignedTransaction:r=>vn(n,r),setAutomine:r=>Tn(n,r),setBalance:r=>Sn(n,r),setBlockGasLimit:r=>An(n,r),setBlockTimestampInterval:r=>Pn(n,r),setCode:r=>Cn(n,r),setCoinbase:r=>_n(n,r),setIntervalMining:r=>Rn(n,r),setLoggingEnabled:r=>Bn(n,r),setMinGasPrice:r=>Fn(n,r),setNextBlockBaseFeePerGas:r=>Un(n,r),setNextBlockTimestamp:r=>kn(n,r),setNonce:r=>Nn(n,r),setRpcUrl:r=>Ln(n,r),setStorageAt:r=>qn(n,r),snapshot:()=>Mn(n),stopImpersonatingAccount:r=>Dn(n,r)}}}function ir(e){const{key:t="test",name:n="Test Client",mode:r}=e;return St({...e,key:t,name:n,type:"testClient"}).extend(a=>({mode:r,...$n({mode:r})(a)}))}function cr(e,t={}){const{keepAlive:n,key:r="webSocket",methods:s,name:a="WebSocket JSON-RPC",reconnect:d,retryDelay:u}=t;return({chain:c,retryCount:o,timeout:h})=>{const f=t.retryCount??o,l=h??t.timeout??1e4,i=e||c?.rpcUrls.default.webSocket?.[0],m={keepAlive:n,reconnect:d};if(!i)throw new At;return Pt({key:r,methods:s,name:a,async request({method:g,params:y}){const E={method:g,params:y},b=await O(i,m),{error:S,result:A}=await b.requestAsync({body:E,timeout:l});if(S)throw new Ct({body:E,error:S,url:i});return A},retryCount:f,retryDelay:u,timeout:l,type:"webSocket"},{getSocket(){return Jt(i)},getRpcClient(){return O(i,m)},async subscribe({params:g,onData:y,onError:E}){const b=await O(i,m),{result:S}=await new Promise((A,v)=>b.request({body:{method:"eth_subscribe",params:g},onError(x){v(x),E?.(x)},onResponse(x){if(x.error){v(x.error),E?.(x.error);return}if(typeof x.id=="number"){A(x);return}x.method==="eth_subscription"&&y(x.params)}}));return{subscriptionId:S,async unsubscribe(){return new Promise(A=>b.request({body:{method:"eth_unsubscribe",params:[S]},onResponse:A}))}}}})}}class ur extends Error{constructor(t,n){super(n),Object.defineProperty(this,"code",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"details",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.code=t,this.details=n}}const Q="/docs/contract/decodeDeployData";function dr(e){const{abi:t,bytecode:n,data:r}=e;if(r===n)return{bytecode:n};const s=t.find(d=>"type"in d&&d.type==="constructor");if(!s)throw new _t({docsPath:Q});if(!("inputs"in s))throw new ie({docsPath:Q});if(!s.inputs||s.inputs.length===0)throw new ie({docsPath:Q});return{args:ge(s.inputs,`0x${r.replace(n,"")}`),bytecode:n}}function fr(e){const t=e.to??(typeof e.blobs[0]=="string"?"hex":"bytes"),n=typeof e.blobs[0]=="string"?e.blobs.map(u=>L(u)):e.blobs,r=n.reduce((u,c)=>u+c.length,0),s=X(new Uint8Array(r));let a=!0;for(const u of n){const c=X(u);for(;a&&c.position<u.length;){c.incrementPosition(1);let o=31;u.length-c.position<31&&(o=u.length-c.position);for(const h in Array.from({length:o})){const f=c.readByte();if(f===128&&!c.inspectBytes(c.remaining).includes(128)){a=!1;break}s.pushByte(f)}}}const d=s.bytes.slice(0,s.position);return t==="hex"?q(d):d}function hr(e){const{sidecars:t,version:n}=e,r=e.to??(typeof t[0].blob=="string"?"hex":"bytes"),s=[];for(const{commitment:a}of t)s.push(Rt({commitment:a,to:r,version:n}));return s}const zn=2147483648;function mr(e){if(e===1)return 60n;if(e>=zn||e<0)throw new Bt({chainId:e});return BigInt((2147483648|e)>>>0)}function Gn({blobToKzgCommitment:e,computeBlobKzgProof:t}){return{blobToKzgCommitment:e,computeBlobKzgProof:t}}function lr(e,t){try{e.loadTrustedSetup(t)}catch(n){const r=n;if(!r.message.includes("trusted setup is already loaded"))throw r}return Gn(e)}function gr({r:e,yParityAndS:t}){const n=L(t),r=n[0]&128?1:0,s=n;return r===1&&(s[0]&=127),{r:e,s:q(s),yParity:r}}function pr(e){const{r:t,s:n}=pe.Signature.fromCompact(e.slice(2,130));return{r:T(t,{size:32}),yParityAndS:T(n,{size:32})}}async function yr(e){const{serializedTransaction:t,signature:n}=e,r=tn(t),s=n??{r:r.r,s:r.s,v:r.v,yParity:r.yParity},a=Ft({...r,r:void 0,s:void 0,v:void 0,yParity:void 0,sidecars:void 0});return await j({hash:V(a),signature:s})}function xr({r:e,yParityAndS:t}){return`0x${new pe.Signature(w(e),w(t)).toCompactHex()}`}function Er(e){const{r:t,s:n,v:r,yParity:s}=e,a=Number(s??r-27n);let d=n;if(a===1){const u=L(n);u[0]|=128,d=q(u)}return{r:t,yParityAndS:d}}export{_t as AbiConstructorNotFoundError,ie as AbiConstructorParamsNotFoundError,Ir as AbiDecodingDataSizeInvalidError,vr as AbiDecodingDataSizeTooSmallError,Tr as AbiDecodingZeroDataError,Sr as AbiEncodingArrayLengthMismatchError,Ar as AbiEncodingBytesSizeMismatchError,qe as AbiEncodingLengthMismatchError,Pr as AbiErrorInputsNotFoundError,Cr as AbiErrorNotFoundError,_r as AbiErrorSignatureNotFoundError,Rr as AbiEventNotFoundError,Br as AbiEventSignatureEmptyTopicsError,Fr as AbiEventSignatureNotFoundError,Ur as AbiFunctionNotFoundError,kr as AbiFunctionOutputsNotFoundError,Nr as AbiFunctionSignatureNotFoundError,Lr as AccountStateConflictError,qr as AtomicReadyWalletRejectedUpgradeError,Mr as AtomicityNotSupportedError,me as BaseError,Dr as BaseFeeScalarError,$r as BlockNotFoundError,zr as BundleFailedError,Gr as BundleTooLargeError,Ge as BytesSizeMismatchError,Hr as CallExecutionError,Or as ChainDisconnectedError,Vr as ChainDoesNotSupportContract,Wr as ChainMismatchError,jr as ChainNotFoundError,Kr as CircularReferenceError,Jr as ClientChainNotConfiguredError,Yr as ContractFunctionExecutionError,Zr as ContractFunctionRevertedError,Qr as ContractFunctionZeroDataError,Xr as CounterfactualDeploymentFailedError,es as DecodeLogDataMismatch,ts as DecodeLogTopicsMismatch,ns as DuplicateIdError,ur as EIP1193ProviderRpcError,rs as Eip1559FeesNotSupportedError,ss as EnsAvatarInvalidNftUriError,as as EnsAvatarUnsupportedNamespaceError,os as EnsAvatarUriResolutionError,Bt as EnsInvalidChainIdError,is as EstimateGasExecutionError,cs as ExecutionRevertedError,us as FeeCapTooHighError,ds as FeeCapTooLowError,fs as FeeConflictError,hs as FilterTypeNotSupportedError,ms as HttpRequestError,ls as InsufficientFundsError,gs as IntegerOutOfRangeError,ps as InternalRpcError,ys as IntrinsicGasTooHighError,xs as IntrinsicGasTooLowError,Es as InvalidAbiDecodingTypeError,bs as InvalidAbiEncodingTypeError,ws as InvalidAbiItemError,_e as InvalidAbiParameterError,Is as InvalidAbiParametersError,vs as InvalidAbiTypeParameterError,he as InvalidAddressError,Ts as InvalidArrayError,Ss as InvalidBytesBooleanError,As as InvalidChainIdError,un as InvalidDecimalNumberError,Ps as InvalidDefinitionTypeError,Cs as InvalidDomainError,_s as InvalidFunctionModifierError,Rs as InvalidHexBooleanError,Ke as InvalidHexValueError,Bs as InvalidInputRpcError,Et as InvalidLegacyVError,Fs as InvalidModifierError,Us as InvalidParameterError,ks as InvalidParamsRpcError,Ns as InvalidParenthesisError,Ls as InvalidPrimaryTypeError,qs as InvalidRequestRpcError,Ms as InvalidSerializableTransactionError,M as InvalidSerializedTransactionError,ht as InvalidSerializedTransactionTypeError,Ds as InvalidSignatureError,$s as InvalidStorageKeySizeError,zs as InvalidStructSignatureError,Gs as InvalidStructTypeError,Hs as JsonRpcVersionUnsupportedError,Os as LimitExceededRpcError,Vs as MaxFeePerGasTooLowError,Ws as MethodNotFoundRpcError,js as MethodNotSupportedRpcError,Ks as NonceMaxValueError,Js as NonceTooHighError,Ys as NonceTooLowError,Zs as ParseRpcError,Qs as ProviderDisconnectedError,Xs as ProviderRpcError,ea as RawContractError,ta as ResourceNotFoundRpcError,na as ResourceUnavailableRpcError,ra as RpcError,Ct as RpcRequestError,sa as SizeExceedsPaddingSizeError,aa as SizeOverflowError,oa as SliceOffsetOutOfBoundsError,W as SocketClosedError,ia as SolidityProtectedKeywordError,ca as StateAssignmentConflictError,ua as SwitchChainError,rt as TimeoutError,da as TipAboveFeeCapError,fa as TransactionExecutionError,ha as TransactionNotFoundError,ma as TransactionReceiptNotFoundError,la as TransactionRejectedRpcError,ga as TransactionTypeNotSupportedError,pa as UnauthorizedProviderError,ya as UnknownBundleIdError,xa as UnknownNodeError,Ea as UnknownRpcError,ba as UnknownSignatureError,wa as UnknownTypeError,Ia as UnsupportedChainIdError,va as UnsupportedNonOptionalCapabilityError,Oe as UnsupportedPackedAbiType,Ta as UnsupportedProviderMethodError,At as UrlRequiredError,Sa as UserRejectedRequestError,Aa as WaitForCallsStatusTimeoutError,Pa as WaitForTransactionReceiptTimeoutError,ae as WebSocketRequestError,Ca as assertCurrentChain,_a as assertRequest,mt as assertTransactionEIP1559,lt as assertTransactionEIP2930,xt as assertTransactionLegacy,Ra as blobsToCommitments,Ba as blobsToProofs,Fa as boolToBytes,De as boolToHex,Ua as bytesToBigInt,ka as bytesToBool,q as bytesToHex,Na as bytesToNumber,La as bytesToRlp,qa as bytesToString,bu as ccipFetch,wu as ccipRequest,Ma as checksumAddress,Rt as commitmentToVersionedHash,Da as commitmentsToVersionedHashes,xr as compactSignatureToHex,gr as compactSignatureToSignature,We as concat,$a as concatBytes,ee as concatHex,St as createClient,Wt as createNonceManager,za as createPublicClient,ir as createTestClient,Pt as createTransport,Ga as createWalletClient,Ha as custom,ge as decodeAbiParameters,dr as decodeDeployData,Oa as decodeErrorResult,Va as decodeEventLog,Wa as decodeFunctionData,ja as decodeFunctionResult,Ka as defineBlock,Ja as defineChain,Gn as defineKzg,Ya as defineTransaction,Za as defineTransactionReceipt,Qa as defineTransactionRequest,Xa as deploylessCallViaBytecodeBytecode,eo as deploylessCallViaFactoryBytecode,to as domainSeparator,dt as encodeAbiParameters,no as encodeDeployData,ro as encodeErrorResult,so as encodeEventTopics,ao as encodeFunctionData,oo as encodeFunctionResult,Wn as encodePacked,io as erc1155Abi,co as erc20Abi,uo as erc20Abi_bytes32,fo as erc4626Abi,ho as erc6492SignatureValidatorAbi,mo as erc6492SignatureValidatorByteCode,lo as erc721Abi,go as ethAddress,wt as etherUnits,Kn as extractChain,po as fallback,yo as formatBlock,xo as formatEther,Eo as formatGwei,bo as formatLog,wo as formatTransaction,Io as formatTransactionReceipt,vt as formatTransactionRequest,vo as formatUnits,fr as fromBlobs,To as fromBytes,So as fromHex,xe as fromRlp,Ao as getAbiItem,N as getAddress,Po as getChainContractAddress,Vn as getContract,jn as getContractAddress,Co as getContractError,kt as getCreate2Address,Ut as getCreateAddress,_o as getEventSelector,Ro as getEventSignature,Bo as getFunctionSelector,Fo as getFunctionSignature,en as getSerializedTransactionType,Uo as getTransactionType,ko as getTypesForEIP712Domain,It as gweiUnits,No as hashDomain,ct as hashMessage,Lo as hashStruct,ut as hashTypedData,w as hexToBigInt,qo as hexToBool,L as hexToBytes,pr as hexToCompactSignature,P as hexToNumber,Mo as hexToRlp,Do as hexToSignature,$o as hexToString,zo as http,fe as isAddress,te as isAddressEqual,ce as isBytes,Yt as isErc6492Signature,Zt as isErc8010Signature,Lt as isHash,p as isHex,V as keccak256,Go as labelhash,Ho as maxInt104,Oo as maxInt112,Vo as maxInt120,Wo as maxInt128,jo as maxInt136,Ko as maxInt144,Jo as maxInt152,Yo as maxInt16,Zo as maxInt160,Qo as maxInt168,Xo as maxInt176,ei as maxInt184,ti as maxInt192,ni as maxInt200,ri as maxInt208,si as maxInt216,ai as maxInt224,oi as maxInt232,ii as maxInt24,ci as maxInt240,ui as maxInt248,di as maxInt256,fi as maxInt32,hi as maxInt40,mi as maxInt48,li as maxInt56,gi as maxInt64,pi as maxInt72,yi as maxInt8,xi as maxInt80,Ei as maxInt88,bi as maxInt96,wi as maxUint104,Ii as maxUint112,vi as maxUint120,Ti as maxUint128,Si as maxUint136,Ai as maxUint144,Pi as maxUint152,Ci as maxUint16,_i as maxUint160,Ri as maxUint168,Bi as maxUint176,Fi as maxUint184,Ui as maxUint192,ki as maxUint200,Ni as maxUint208,Li as maxUint216,qi as maxUint224,Mi as maxUint232,Di as maxUint24,$i as maxUint240,zi as maxUint248,Gi as maxUint256,Hi as maxUint32,Oi as maxUint40,Vi as maxUint48,Wi as maxUint56,ji as maxUint64,Ki as maxUint72,Ji as maxUint8,Yi as maxUint80,Zi as maxUint88,Qi as maxUint96,Xi as minInt104,ec as minInt112,tc as minInt120,nc as minInt128,rc as minInt136,sc as minInt144,ac as minInt152,oc as minInt16,ic as minInt160,cc as minInt168,uc as minInt176,dc as minInt184,fc as minInt192,hc as minInt200,mc as minInt208,lc as minInt216,gc as minInt224,pc as minInt232,yc as minInt24,xc as minInt240,Ec as minInt248,bc as minInt256,wc as minInt32,Ic as minInt40,vc as minInt48,Tc as minInt56,Sc as minInt64,Ac as minInt72,Pc as minInt8,Cc as minInt80,_c as minInt88,Rc as minInt96,Bc as multicall3Abi,Fc as namehash,Yn as nonceManager,Uc as numberToBytes,T as numberToHex,Iu as offchainLookup,vu as offchainLookupAbiItem,Tu as offchainLookupSignature,H as pad,kc as padBytes,oe as padHex,Nc as parseAbi,Lc as parseAbiItem,On as parseAbiParameter,qc as parseAbiParameters,pr as parseCompactSignature,Qn as parseErc6492Signature,Xn as parseErc8010Signature,ar as parseEther,Mc as parseEventLogs,or as parseGwei,Dc as parseSignature,tn as parseTransaction,Ae as parseUnits,$c as prepareEncodeFunctionData,zc as presignMessagePrefix,Gc as publicActions,j as recoverAddress,Qt as recoverMessageAddress,Hc as recoverPublicKey,yr as recoverTransactionAddress,Xt as recoverTypedDataAddress,Jn as ripemd160,Oc as rpcSchema,Vc as rpcTransactionType,Wc as serializeAccessList,xr as serializeCompactSignature,er as serializeErc6492Signature,tr as serializeErc8010Signature,jc as serializeSignature,Ft as serializeTransaction,Kc as serializeTypedData,Jc as setErrorConfig,lr as setupKzg,Yc as sha256,Zc as shouldThrow,hr as sidecarsToVersionedHashes,Er as signatureToCompactSignature,Qc as signatureToHex,Je as size,Ve as slice,Xc as sliceBytes,le as sliceHex,eu as stringToBytes,Me as stringToHex,tu as stringify,$n as testActions,gt as toBlobSidecars,nu as toBlobs,k as toBytes,mr as toCoinType,ru as toEventHash,su as toEventSelector,au as toEventSignature,ou as toFunctionHash,iu as toFunctionSelector,cu as toFunctionSignature,Qe as toHex,uu as toPrefixedMessage,je as toRlp,du as transactionType,bt as trim,fu as universalSignatureValidatorAbi,hu as universalSignatureValidatorByteCode,mu as validateTypedData,nr as verifyHash,rr as verifyMessage,sr as verifyTypedData,lu as walletActions,cr as webSocket,gu as weiUnits,pu as withCache,yu as withRetry,nt as withTimeout,xu as zeroAddress,Zn as zeroHash};
