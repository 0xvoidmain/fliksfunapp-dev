import{C as n,ar as e,as as d}from"./index-MmD_uyqy.js";import{f as o}from"./fetchTokenMetadata-DC7WIA2B.js";import{totalSupply as u}from"./totalSupply-1AC7LWQa.js";import"./detectExtension-CRMibtJ3.js";const i="0x0e89341c",I=[{name:"tokenId",type:"uint256"}],k=[{type:"string"}];async function m(t){return n({contract:t.contract,method:[i,I,k],params:[t.tokenId]})}async function F(t){const{useIndexer:c=!0}=t;if(c)try{return await s(t)}catch{return await a(t)}return await a(t)}async function s(t){const c=await e({chain:t.contract.chain,client:t.contract.client,contractAddress:t.contract.address,tokenId:t.tokenId});return c||a(t)}async function a(t){const[c,r]=await Promise.all([m({contract:t.contract,tokenId:t.tokenId}),u({contract:t.contract,id:t.tokenId}).catch(()=>0n)]);return d(await o({client:t.contract.client,tokenId:t.tokenId,tokenUri:c}).catch(()=>({id:t.tokenId,type:"ERC1155",uri:c})),{chainId:t.contract.chain.id,owner:null,supply:r,tokenAddress:t.contract.address,tokenId:t.tokenId,tokenUri:c,type:"ERC1155"})}export{F as getNFT};
