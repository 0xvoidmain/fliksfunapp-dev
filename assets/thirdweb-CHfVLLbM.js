const j={bodySerializer:e=>JSON.stringify(e,(r,t)=>typeof t=="bigint"?t.toString():t)},B=async(e,r)=>{const t=typeof r=="function"?await r(e):r;if(t)return e.scheme==="bearer"?`Bearer ${t}`:e.scheme==="basic"?`Basic ${btoa(t)}`:t},_=e=>{switch(e){case"label":return".";case"matrix":return";";case"simple":return",";default:return"&"}},S=e=>{switch(e){case"form":return",";case"pipeDelimited":return"|";case"spaceDelimited":return"%20";default:return","}},O=e=>{switch(e){case"label":return".";case"matrix":return";";case"simple":return",";default:return"&"}},T=({allowReserved:e,explode:r,name:t,style:o,value:c})=>{if(!r){const n=(e?c:c.map(l=>encodeURIComponent(l))).join(S(o));switch(o){case"label":return`.${n}`;case"matrix":return`;${t}=${n}`;case"simple":return n;default:return`${t}=${n}`}}const i=_(o),s=c.map(n=>o==="label"||o==="simple"?e?n:encodeURIComponent(n):x({allowReserved:e,name:t,value:n})).join(i);return o==="label"||o==="matrix"?i+s:s},x=({allowReserved:e,name:r,value:t})=>{if(t==null)return"";if(typeof t=="object")throw new Error("Deeply-nested arrays/objects arenâ€™t supported. Provide your own `querySerializer()` to handle these.");return`${r}=${e?t:encodeURIComponent(t)}`},w=({allowReserved:e,explode:r,name:t,style:o,value:c,valueOnly:i})=>{if(c instanceof Date)return i?c.toISOString():`${t}=${c.toISOString()}`;if(o!=="deepObject"&&!r){let l=[];Object.entries(c).forEach(([f,g])=>{l=[...l,f,e?g:encodeURIComponent(g)]});const y=l.join(",");switch(o){case"form":return`${t}=${y}`;case"label":return`.${y}`;case"matrix":return`;${t}=${y}`;default:return y}}const s=O(o),n=Object.entries(c).map(([l,y])=>x({allowReserved:e,name:o==="deepObject"?`${t}[${l}]`:l,value:y})).join(s);return o==="label"||o==="matrix"?s+n:n},I=/\{[^{}]+\}/g,$=({path:e,url:r})=>{let t=r;const o=r.match(I);if(o)for(const c of o){let i=!1,s=c.substring(1,c.length-1),n="simple";s.endsWith("*")&&(i=!0,s=s.substring(0,s.length-1)),s.startsWith(".")?(s=s.substring(1),n="label"):s.startsWith(";")&&(s=s.substring(1),n="matrix");const l=e[s];if(l==null)continue;if(Array.isArray(l)){t=t.replace(c,T({explode:i,name:s,style:n,value:l}));continue}if(typeof l=="object"){t=t.replace(c,w({explode:i,name:s,style:n,value:l,valueOnly:!0}));continue}if(n==="matrix"){t=t.replace(c,`;${x({name:s,value:l})}`);continue}const y=encodeURIComponent(n==="label"?`.${l}`:l);t=t.replace(c,y)}return t},V=({allowReserved:e,array:r,object:t}={})=>c=>{const i=[];if(c&&typeof c=="object")for(const s in c){const n=c[s];if(n!=null)if(Array.isArray(n)){const l=T({allowReserved:e,explode:!0,name:s,style:"form",value:n,...r});l&&i.push(l)}else if(typeof n=="object"){const l=w({allowReserved:e,explode:!0,name:s,style:"deepObject",value:n,...t});l&&i.push(l)}else{const l=x({allowReserved:e,name:s,value:n});l&&i.push(l)}}return i.join("&")},z=e=>{if(!e)return"stream";const r=e.split(";")[0]?.trim();if(r){if(r.startsWith("application/json")||r.endsWith("+json"))return"json";if(r==="multipart/form-data")return"formData";if(["application/","audio/","image/","video/"].some(t=>r.startsWith(t)))return"blob";if(r.startsWith("text/"))return"text"}},E=async({security:e,...r})=>{for(const t of e){const o=await B(t,r.auth);if(!o)continue;const c=t.name??"Authorization";switch(t.in){case"query":r.query||(r.query={}),r.query[c]=o;break;case"cookie":r.headers.append("Cookie",`${c}=${o}`);break;case"header":default:r.headers.set(c,o);break}return}},A=e=>N({baseUrl:e.baseUrl,path:e.path,query:e.query,querySerializer:typeof e.querySerializer=="function"?e.querySerializer:V(e.querySerializer),url:e.url}),N=({baseUrl:e,path:r,query:t,querySerializer:o,url:c})=>{const i=c.startsWith("/")?c:`/${c}`;let s=(e??"")+i;r&&(s=$({path:r,url:s}));let n=t?o(t):"";return n.startsWith("?")&&(n=n.substring(1)),n&&(s+=`?${n}`),s},v=(e,r)=>{const t={...e,...r};return t.baseUrl?.endsWith("/")&&(t.baseUrl=t.baseUrl.substring(0,t.baseUrl.length-1)),t.headers=C(e.headers,r.headers),t},C=(...e)=>{const r=new Headers;for(const t of e){if(!t||typeof t!="object")continue;const o=t instanceof Headers?t.entries():Object.entries(t);for(const[c,i]of o)if(i===null)r.delete(c);else if(Array.isArray(i))for(const s of i)r.append(c,s);else i!==void 0&&r.set(c,typeof i=="object"?JSON.stringify(i):i)}return r};class k{constructor(){Object.defineProperty(this,"_fns",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this._fns=[]}clear(){this._fns=[]}getInterceptorIndex(r){return typeof r=="number"?this._fns[r]?r:-1:this._fns.indexOf(r)}exists(r){const t=this.getInterceptorIndex(r);return!!this._fns[t]}eject(r){const t=this.getInterceptorIndex(r);this._fns[t]&&(this._fns[t]=null)}update(r,t){const o=this.getInterceptorIndex(r);return this._fns[o]?(this._fns[o]=t,r):!1}use(r){return this._fns=[...this._fns,r],this._fns.length-1}}const W=()=>({error:new k,request:new k,response:new k}),q=V({allowReserved:!1,array:{explode:!0,style:"form"},object:{explode:!0,style:"deepObject"}}),P={"Content-Type":"application/json"},K=(e={})=>({...j,headers:P,parseAs:"auto",querySerializer:q,...e}),U=(e={})=>{let r=v(K(),e);const t=()=>({...r}),o=s=>(r=v(r,s),t()),c=W(),i=async s=>{const n={...r,...s,fetch:s.fetch??r.fetch??globalThis.fetch,headers:C(r.headers,s.headers)};n.security&&await E({...n,security:n.security}),n.body&&n.bodySerializer&&(n.body=n.bodySerializer(n.body)),(n.body===void 0||n.body==="")&&n.headers.delete("Content-Type");const l=A(n),y={redirect:"follow",...n};let f=new Request(l,y);for(const d of c.request._fns)d&&(f=await d(f,n));const g=n.fetch;let u=await g(f);for(const d of c.response._fns)d&&(u=await d(u,f,n));const m={request:f,response:u};if(u.ok){if(u.status===204||u.headers.get("Content-Length")==="0")return n.responseStyle==="data"?{}:{data:{},...m};const d=(n.parseAs==="auto"?z(u.headers.get("Content-Type")):n.parseAs)??"json";let p;switch(d){case"arrayBuffer":case"blob":case"formData":case"json":case"text":p=await u[d]();break;case"stream":return n.responseStyle==="data"?u.body:{data:u.body,...m}}return d==="json"&&(n.responseValidator&&await n.responseValidator(p),n.responseTransformer&&(p=await n.responseTransformer(p))),n.responseStyle==="data"?p:{data:p,...m}}let b=await u.text();try{b=JSON.parse(b)}catch{}let h=b;for(const d of c.error._fns)d&&(h=await d(b,u,f,n));if(h=h||{},n.throwOnError)throw h;return n.responseStyle==="data"?void 0:{error:h,...m}};return{buildUrl:A,connect:s=>i({...s,method:"CONNECT"}),delete:s=>i({...s,method:"DELETE"}),get:s=>i({...s,method:"GET"}),getConfig:t,head:s=>i({...s,method:"HEAD"}),interceptors:c,options:s=>i({...s,method:"OPTIONS"}),patch:s=>i({...s,method:"PATCH"}),post:s=>i({...s,method:"POST"}),put:s=>i({...s,method:"PUT"}),request:i,setConfig:o,trace:s=>i({...s,method:"TRACE"})}},a=U(K()),H=e=>(e?.client??a).get({security:[{name:"x-secret-key",type:"apiKey"}],url:"/v1/webhooks",...e}),D=e=>(e?.client??a).post({security:[{name:"x-secret-key",type:"apiKey"}],url:"/v1/webhooks",...e,headers:{"Content-Type":"application/json",...e?.headers}}),R=e=>(e.client??a).delete({security:[{name:"x-secret-key",type:"apiKey"}],url:"/v1/webhooks/{webhook_id}",...e}),M=e=>(e.client??a).patch({security:[{name:"x-secret-key",type:"apiKey"}],url:"/v1/webhooks/{webhook_id}",...e,headers:{"Content-Type":"application/json",...e.headers}}),J=e=>(e?.client??a).post({security:[{name:"x-secret-key",type:"apiKey"}],url:"/v1/webhooks/test",...e,headers:{"Content-Type":"application/json",...e?.headers}}),L=e=>(e?.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/events",...e}),Q=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/events/{contractAddress}",...e}),F=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/events/{contractAddress}/{signature}",...e}),G=e=>(e?.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/transactions",...e}),X=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/transactions/{contractAddress}",...e}),Y=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/transactions/{contractAddress}/{signature}",...e}),Z=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/owners",...e}),ee=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/transfers/transaction/{transaction_hash}",...e}),te=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/transfers/{contract_address}",...e}),re=e=>(e?.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/transfers",...e}),ne=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/erc20/{ownerAddress}",...e}),se=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens",...e}),ae=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/erc721/{ownerAddress}",...e}),ce=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/erc1155/{ownerAddress}",...e}),ie=e=>(e?.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/price/supported",...e}),oe=e=>(e?.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/price",...e}),le=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/tokens/lookup",...e}),ue=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/resolve/{input}",...e}),de=e=>(e?.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/blocks",...e}),ye=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/contracts/abi/{contractAddress}",...e}),fe=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/contracts/metadata/{contractAddress}",...e}),pe=e=>(e.client??a).post({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/decode/{contractAddress}",...e,headers:{"Content-Type":"application/json",...e.headers}}),he=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/balance/{ownerAddress}",...e}),ge=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/collections/{contract_address}",...e}),me=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts",...e}),be=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/owners/{contract_address}",...e}),xe=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/owners/{contract_address}/{token_id}",...e}),ke=e=>(e?.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/transfers",...e}),Ae=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/transfers/transaction/{transaction_hash}",...e}),ve=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/transfers/{contract_address}",...e}),Te=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/{contract_address}",...e}),we=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/transfers/{contract_address}/{token_id}",...e}),Ve=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/{contract_address}/{token_id}",...e}),Ce=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/metadata/refresh/{contract_address}",...e}),Ke=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/nfts/metadata/refresh/{contract_address}/{token_id}",...e}),je=e=>(e.client??a).get({security:[{name:"x-client-id",type:"apiKey"}],url:"/v1/wallets/{wallet_address}/transactions",...e}),Be=e=>(e?.client??a).post({security:[{name:"x-client-id",type:"apiKey"}],url:"/service/webhooks/filters/validate",...e,headers:{"Content-Type":"application/json",...e?.headers}});function _e(e){a.setConfig({headers:{...e.clientId&&{"x-client-id":e.clientId},...e.secretKey&&{"x-secret-key":e.secretKey}},...e.override??{}})}export{_e as configure,R as deleteV1WebhooksByWebhookId,de as getV1Blocks,ye as getV1ContractsAbiByContractAddress,fe as getV1ContractsMetadataByContractAddress,L as getV1Events,Q as getV1EventsByContractAddress,F as getV1EventsByContractAddressBySignature,me as getV1Nfts,he as getV1NftsBalanceByOwnerAddress,Te as getV1NftsByContractAddress,Ve as getV1NftsByContractAddressByTokenId,ge as getV1NftsCollectionsByContractAddress,Ce as getV1NftsMetadataRefreshByContractAddress,Ke as getV1NftsMetadataRefreshByContractAddressByTokenId,be as getV1NftsOwnersByContractAddress,xe as getV1NftsOwnersByContractAddressByTokenId,ke as getV1NftsTransfers,ve as getV1NftsTransfersByContractAddress,we as getV1NftsTransfersByContractAddressByTokenId,Ae as getV1NftsTransfersTransactionByTransactionHash,ue as getV1ResolveByInput,se as getV1Tokens,ce as getV1TokensErc1155ByOwnerAddress,ne as getV1TokensErc20ByOwnerAddress,ae as getV1TokensErc721ByOwnerAddress,le as getV1TokensLookup,Z as getV1TokensOwners,oe as getV1TokensPrice,ie as getV1TokensPriceSupported,re as getV1TokensTransfers,te as getV1TokensTransfersByContractAddress,ee as getV1TokensTransfersTransactionByTransactionHash,G as getV1Transactions,X as getV1TransactionsByContractAddress,Y as getV1TransactionsByContractAddressBySignature,je as getV1WalletsByWalletAddressTransactions,H as getV1Webhooks,M as patchV1WebhooksByWebhookId,Be as postServiceWebhooksFiltersValidate,pe as postV1DecodeByContractAddress,D as postV1Webhooks,J as postV1WebhooksTest};
