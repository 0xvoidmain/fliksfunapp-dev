const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-Lv97acni.js","assets/index-Du6qykdW.css","assets/signing-McFo_90W.js","assets/concat-hex-DJoAcX-x.js","assets/send-eip712-transaction-B3URZHxT.js","assets/eth_sendRawTransaction-DPdnXbFR.js","assets/sha256-e2XV-BR9.js","assets/in-app-wallet-calls-DFChreyE.js","assets/send-batch-transaction-UIzUjPqq.js"])))=>i.map(i=>d[i]);
import{x as L,bH as _,bI as W,_ as x,bJ as ue,aj as me,bK as K,Z as z,bf as j,ao as pe,M as Z,k as Y,bL as F,aR as D,b5 as S,bM as J,bN as ye,bO as C,bP as le,e as Q,J as b,bQ as k,o as H,r as O,ar as fe,bR as we,bS as ve,bT as Ae,bU as he,bV as ge,O as T,Q as Ge,y as Te,aS as Pe,bW as xe,bX as I,bY as X,bZ as ee,b_ as Le,b$ as Oe,af as De,h as te,p as Se,b as E,c0 as Ce,c1 as be,t as V,aT as _e,c2 as Fe,c3 as Ee,c4 as Ie,c5 as Ve}from"./index-Lv97acni.js";import{t as Ue,p as Ne,s as $e}from"./send-eip712-transaction-B3URZHxT.js";const Re="0xdd62ed3e",ke=[{name:"owner",type:"address"},{name:"spender",type:"address"}],He=[{type:"uint256"}];async function Me(e){return L({contract:e.contract,method:[Re,ke,He],params:[e.owner,e.spender]})}const Be="0x095ea7b3",qe=[{name:"spender",type:"address"},{name:"value",type:"uint256"}],We=[{type:"bool"}];function Ke(e){const a=W(async()=>"asyncParams"in e?await e.asyncParams():e);return _({accessList:async()=>(await a()).overrides?.accessList,authorizationList:async()=>(await a()).overrides?.authorizationList,contract:e.contract,erc20Value:async()=>(await a()).overrides?.erc20Value,extraGas:async()=>(await a()).overrides?.extraGas,gas:async()=>(await a()).overrides?.gas,gasPrice:async()=>(await a()).overrides?.gasPrice,maxFeePerGas:async()=>(await a()).overrides?.maxFeePerGas,maxPriorityFeePerGas:async()=>(await a()).overrides?.maxPriorityFeePerGas,method:[Be,qe,We],nonce:async()=>(await a()).overrides?.nonce,params:async()=>{const t=await a();return[t.spender,t.value]},value:async()=>(await a()).overrides?.value})}function ze(e){return Ke({asyncParams:async()=>{let a;if("amount"in e){const{decimals:t}=await x(async()=>{const{decimals:n}=await import("./index-Lv97acni.js").then(s=>s.ed);return{decimals:n}},__vite__mapDeps([0,1])),r=await t(e).catch(()=>18);a=ue(e.amount.toString(),r)}else a=e.amountWei;return{overrides:{erc20Value:{amountWei:a,tokenAddress:e.contract.address},...e.overrides},spender:e.spender,value:a}},contract:e.contract})}const je="0xf15d424e",Ze=[{name:"signer",type:"address"}],Ye=[{components:[{name:"signer",type:"address"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"startTimestamp",type:"uint128"},{name:"endTimestamp",type:"uint128"}],name:"permissions",type:"tuple"}];async function Je(e){return L({contract:e.contract,method:[je,Ze,Ye],params:[e.signer]})}const Qe="0x5892e236",Xe=[{components:[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],name:"req",type:"tuple"},{name:"signature",type:"bytes"}],et=[];function tt(e){const a=W(async()=>"asyncParams"in e?await e.asyncParams():e);return _({accessList:async()=>(await a()).overrides?.accessList,authorizationList:async()=>(await a()).overrides?.authorizationList,contract:e.contract,erc20Value:async()=>(await a()).overrides?.erc20Value,extraGas:async()=>(await a()).overrides?.extraGas,gas:async()=>(await a()).overrides?.gas,gasPrice:async()=>(await a()).overrides?.gasPrice,maxFeePerGas:async()=>(await a()).overrides?.maxFeePerGas,maxPriorityFeePerGas:async()=>(await a()).overrides?.maxPriorityFeePerGas,method:[Qe,Xe,et],nonce:async()=>(await a()).overrides?.nonce,params:async()=>{const t=await a();return[t.req,t.signature]},value:async()=>(await a()).overrides?.value})}function q(){return new Date(Date.now()+1e3*60*60*24*365*10)}function N(e){return Ue(Math.floor(e.getTime()/1e3))}const at=[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}];async function st(e){const{account:a,contract:t,req:r}=e,n=await a.signTypedData({domain:{chainId:t.chain.id,name:"Account",verifyingContract:t.address,version:"1"},message:r,primaryType:"SignerPermissionRequest",types:{SignerPermissionRequest:at}});return{req:r,signature:n}}async function nt(e){const{target:a,permissions:t}=e;return{approvedTargets:t.approvedTargets==="*"?[z]:t.approvedTargets,isAdmin:0,nativeTokenLimitPerTransaction:K(t.nativeTokenLimitPerTransaction?.toString()||"0"),permissionEndTimestamp:N(t.permissionEndTimestamp||q()),permissionStartTimestamp:N(t.permissionStartTimestamp||new Date(0)),reqValidityEndTimestamp:N(q()),reqValidityStartTimestamp:0n,signer:a,uid:await me()}}function rt(e){const{contract:a,sessionKeyAddress:t,account:r,permissions:n}=e;return tt({async asyncParams(){const{req:s,signature:c}=await st({account:r,contract:a,req:await nt({permissions:n,target:t})});return{req:s,signature:c}},contract:a})}async function it(e){const{accountContract:a,sessionKeyAddress:t,newPermissions:r}=e;if(!await j(a))return!0;const s=await Je({contract:a,signer:t});return!!(s.endTimestamp&&s.endTimestamp<Math.floor(Date.now()/1e3)||!ct(s.approvedTargets,r.approvedTargets)||K(r.nativeTokenLimitPerTransaction?.toString()??"0")>s.nativeTokenLimitPerTransaction)}function ct(e,a){return a==="*"&&e.length===1&&e[0]===z?!0:a!=="*"?a.map(t=>t.toLowerCase()).every(t=>e.map(r=>r.toLowerCase()).includes(t)):!1}const ot=2n**96n-1n;async function dt(e){const{factoryContract:a,predictAddressOverride:t,adminAddress:r,accountSalt:n,accountAddress:s}=e;if(t)return t(a,r);if(s)return s;if(!r)throw new Error("Account address is required to predict the smart wallet address.");return pe(async()=>{const c=n&&Z(n)?n:Y(n??"");let i,u=0;const m=3;for(;u<=m;)try{i=await L({contract:a,method:"function getAddress(address, bytes) returns (address)",params:[r,c]});break}catch(y){if(u===m)throw y;const l=2**(u+1)*200;await new Promise(o=>setTimeout(o,l)),u++}if(!i)throw new Error(`No smart account address found for admin address ${r} and salt ${n}`);return i},{cacheKey:`${e.factoryContract.chain.id}-${e.factoryContract.address}-${e.adminAddress}-${e.accountSalt}`,cacheTime:1e3*60*60*24})}function ae(e){const{adminAddress:a,factoryContract:t,createAccountOverride:r,accountSalt:n}=e;if(r)return r(t,a);const s=n&&Z(n)?n:Y(n??"");return _({contract:t,method:"function createAccount(address, bytes) returns (address)",params:[a,s]})}function se(e){const{accountContract:a,transaction:t,executeOverride:r}=e;if(r)return r(a,t);let n=t.value||0n;return(t.chainId===295||t.chainId===296)&&(n=BigInt(n)/BigInt(10**10)),_({contract:a,gas:t.gas?t.gas+21000n:void 0,method:"function execute(address, uint256, bytes)",params:[t.to||"",n,t.data||"0x"]})}function ut(e){const{accountContract:a,transactions:t,executeBatchOverride:r}=e;if(r)return r(a,t);let n=t.map(c=>c.value||0n);const s=t[0]?.chainId;return(s===295||s===296)&&(n=n.map(c=>BigInt(c)/BigInt(10**10))),_({contract:a,method:"function executeBatch(address[], uint256[], bytes[])",params:[t.map(c=>c.to||""),n,t.map(c=>c.data||"0x")]})}const mt="0x35567e1a",pt=[{name:"sender",type:"address"},{name:"key",type:"uint192"}],yt=[{name:"nonce",type:"uint256"}];async function lt(e){return L({contract:e.contract,method:[mt,pt,yt],params:[e.sender,e.key]})}const ft="0xa6193531",wt=[{components:[{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"initCode",type:"bytes"},{name:"callData",type:"bytes"},{name:"callGasLimit",type:"uint256"},{name:"verificationGasLimit",type:"uint256"},{name:"preVerificationGas",type:"uint256"},{name:"maxFeePerGas",type:"uint256"},{name:"maxPriorityFeePerGas",type:"uint256"},{name:"paymasterAndData",type:"bytes"},{name:"signature",type:"bytes"}],name:"userOp",type:"tuple"}],vt=[{type:"bytes32"}];async function At(e){return L({contract:e.contract,method:[ft,wt,vt],params:[e.userOp]})}const ht="0x22cdde4c",gt=[{components:[{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"initCode",type:"bytes"},{name:"callData",type:"bytes"},{name:"accountGasLimits",type:"bytes32"},{name:"preVerificationGas",type:"uint256"},{name:"gasFees",type:"bytes32"},{name:"paymasterAndData",type:"bytes"},{name:"signature",type:"bytes"}],name:"userOp",type:"tuple"}],Gt=[{type:"bytes32"}];async function Tt(e){return L({contract:e.contract,method:[ht,gt,Gt],params:[e.userOp]})}function Pt(e){return e.factory?F([e.factory,e.factoryData||"0x"]):"0x"}function xt(e){return F([D(S(BigInt(e.verificationGasLimit)),{size:16}),D(S(BigInt(e.callGasLimit)),{size:16})])}function Lt(e){return F([D(S(BigInt(e.maxPriorityFeePerGas)),{size:16}),D(S(BigInt(e.maxFeePerGas)),{size:16})])}function Ot(e){return e.paymaster?F([e.paymaster,D(S(BigInt(e.paymasterVerificationGasLimit||0)),{size:16}),D(S(BigInt(e.paymasterPostOpGasLimit||0)),{size:16}),e.paymasterData||"0x"]):"0x"}const Dt=e=>({accountGasLimits:xt(e),callData:e.callData,gasFees:Lt(e),initCode:Pt(e),nonce:BigInt(e.nonce),paymasterAndData:Ot(e),preVerificationGas:BigInt(e.preVerificationGas),sender:e.sender,signature:e.signature});async function U(e){const{userOp:a,paymasterOverride:t,client:r,chain:n,entrypointAddress:s}=e;if(t)return t(a);const c={"Content-Type":"application/json"},i=s??C,u=J(n),m={id:1,jsonrpc:"2.0",method:"pm_sponsorUserOperation",params:[ye(a),i]},l=await le(r)(u,{body:Q(m),headers:c,method:"POST"});if(!l.ok){const v=await l.text()||l.statusText;throw new Error(`Paymaster error: ${l.status} - ${v}`)}const o=await l.json();if(o.result)return typeof o.result=="string"?{paymasterAndData:o.result}:(o.result.reason&&console.warn(`Paymaster policy rejected this transaction with reason: ${o.result.reason} ${o.result.policyId?`(policyId: ${o.result.policyId})`:""}`),{callGasLimit:o.result.callGasLimit?b(o.result.callGasLimit):void 0,paymaster:o.result.paymaster,paymasterAndData:o.result.paymasterAndData,paymasterData:o.result.paymasterData,paymasterPostOpGasLimit:o.result.paymasterPostOpGasLimit?b(o.result.paymasterPostOpGasLimit):void 0,paymasterVerificationGasLimit:o.result.paymasterVerificationGasLimit?b(o.result.paymasterVerificationGasLimit):void 0,preVerificationGas:o.result.preVerificationGas?b(o.result.preVerificationGas):void 0,verificationGasLimit:o.result.verificationGasLimit?b(o.result.verificationGasLimit):void 0});const w=o.error?.message||o.error||l.statusText||"unknown error";throw new Error(`Paymaster error from ${u}: ${w}`)}const M=new Set,B=e=>`${e.chain.id}:${e.address}`,ne=e=>{M.add(B(e))},re=e=>{M.delete(B(e))},ie=e=>M.has(B(e));async function St(e){const a=e.timeoutMs||12e4,t=e.intervalMs||1e3,r=Date.now()+a;for(;Date.now()<r;){const n=await we(e);if(n)return n;await new Promise(s=>setTimeout(s,t))}throw new Error(`Timeout waiting for userOp to be mined on chain ${e.chain.id} with UserOp hash: ${e.userOpHash}`)}async function Ct(e){const{transaction:a,accountContract:t,factoryContract:r,adminAddress:n,overrides:s,sponsorGas:c,waitForDeployment:i=!0,isDeployedOverride:u}=e,m=a.chain,y=a.client,l={bundlerUrl:s?.bundlerUrl,chain:m,client:y,entrypointAddress:s?.entrypointAddress},o=k(e.overrides?.entrypointAddress||C),[w,v,A,h,f]=await Promise.all([typeof u=="boolean"?u:j(t).then(P=>P||ie(t)),H(a),O(a.gas),bt({bundlerOptions:l,chain:m,client:y,executeTx:a}),Ut({accountContract:t,chain:m,client:y,entrypointAddress:s?.entrypointAddress,getNonceOverride:s?.getAccountNonce})]),{maxFeePerGas:d,maxPriorityFeePerGas:p}=h;return o==="v0.7"?_t({accountContract:t,adminAddress:n,bundlerOptions:l,callData:v,callGasLimit:A,factoryContract:r,isDeployed:w,maxFeePerGas:d,maxPriorityFeePerGas:p,nonce:f,overrides:s,sponsorGas:c,waitForDeployment:i}):Ft({accountContract:t,adminAddress:n,bundlerOptions:l,callData:v,callGasLimit:A,factoryContract:r,isDeployed:w,maxFeePerGas:d,maxPriorityFeePerGas:p,nonce:f,overrides:s,sponsorGas:c,waitForDeployment:i})}async function bt(e){const{executeTx:a,bundlerOptions:t,chain:r,client:n}=e;let{maxFeePerGas:s,maxPriorityFeePerGas:c}=a;const i=t?.bundlerUrl??J(r);if(ve(i)){const u=await Ae({options:t});s=u.maxFeePerGas,c=u.maxPriorityFeePerGas}else{const[u,m]=await Promise.all([O(s),O(c)]);if(u&&m)s=u,c=m;else{const y=await he(n,r);c=m??y.maxPriorityFeePerGas??0n,s=u??y.maxFeePerGas??0n}}return{maxFeePerGas:s,maxPriorityFeePerGas:c}}async function _t(e){const{bundlerOptions:a,isDeployed:t,factoryContract:r,accountContract:n,adminAddress:s,sponsorGas:c,overrides:i,nonce:u,callData:m,callGasLimit:y,maxFeePerGas:l,maxPriorityFeePerGas:o,waitForDeployment:w}=e,{chain:v,client:A}=a;let h,f;t?(f="0x",w&&await ce(n)):(h=r.address,f=await H(ae({accountSalt:i?.accountSalt,adminAddress:s,createAccountOverride:i?.createAccount,factoryContract:r})),w&&ne(n));const d={callData:m,callGasLimit:y??0n,factory:h,factoryData:f,maxFeePerGas:l,maxPriorityFeePerGas:o,nonce:u,paymaster:void 0,paymasterData:"0x",paymasterPostOpGasLimit:0n,paymasterVerificationGasLimit:0n,preVerificationGas:0n,sender:n.address,signature:X,verificationGasLimit:0n};if(c){const p=await U({chain:v,client:A,entrypointAddress:i?.entrypointAddress,paymasterOverride:i?.paymaster,userOp:d});if(p.paymaster&&p.paymasterData&&(d.paymaster=p.paymaster,d.paymasterData=p.paymasterData),p.callGasLimit&&p.verificationGasLimit&&p.preVerificationGas&&p.paymasterPostOpGasLimit&&p.paymasterVerificationGasLimit)d.callGasLimit=p.callGasLimit,d.verificationGasLimit=p.verificationGasLimit,d.preVerificationGas=p.preVerificationGas,d.paymasterPostOpGasLimit=p.paymasterPostOpGasLimit,d.paymasterVerificationGasLimit=p.paymasterVerificationGasLimit;else{const P=i?.tokenPaymaster?{[i.tokenPaymaster.tokenAddress]:{stateDiff:{[Ge(Te([{type:"address"},{type:"uint256"}],[n.address,i.tokenPaymaster.balanceStorageSlot]))]:Pe(xe,{size:32})}}}:void 0,g=await I({options:a,userOp:d},P);d.callGasLimit=g.callGasLimit,d.verificationGasLimit=g.verificationGasLimit,d.preVerificationGas=g.preVerificationGas,d.paymasterPostOpGasLimit=i?.tokenPaymaster?500000n:g.paymasterPostOpGasLimit||0n,d.paymasterVerificationGasLimit=g.paymasterVerificationGasLimit||0n;const G=await U({chain:v,client:A,entrypointAddress:i?.entrypointAddress,paymasterOverride:i?.paymaster,userOp:d});G.paymaster&&G.paymasterData&&(d.paymaster=G.paymaster,d.paymasterData=G.paymasterData)}}else{const p=await I({options:a,userOp:d});d.callGasLimit=p.callGasLimit,d.verificationGasLimit=p.verificationGasLimit,d.preVerificationGas=p.preVerificationGas,d.paymasterPostOpGasLimit=p.paymasterPostOpGasLimit||0n,d.paymasterVerificationGasLimit=p.paymasterVerificationGasLimit||0n}return{...d,signature:"0x"}}async function Ft(e){const{bundlerOptions:a,isDeployed:t,factoryContract:r,accountContract:n,adminAddress:s,sponsorGas:c,overrides:i,nonce:u,callData:m,callGasLimit:y,maxFeePerGas:l,maxPriorityFeePerGas:o,waitForDeployment:w}=e,{chain:v,client:A}=a;let h;t?(h="0x",w&&await ce(n)):(h=await Vt({accountSalt:i?.accountSalt,adminAddress:s,createAccountOverride:i?.createAccount,factoryContract:r}),w&&ne(n));const f={callData:m,callGasLimit:y??0n,initCode:h,maxFeePerGas:l,maxPriorityFeePerGas:o,nonce:u,paymasterAndData:"0x",preVerificationGas:0n,sender:n.address,signature:X,verificationGasLimit:0n};if(c){const d=await U({chain:v,client:A,entrypointAddress:i?.entrypointAddress,paymasterOverride:i?.paymaster,userOp:f}),p="paymasterAndData"in d?d.paymasterAndData:"0x";if(p&&p!=="0x"&&(f.paymasterAndData=p),d.callGasLimit&&d.verificationGasLimit&&d.preVerificationGas)f.callGasLimit=d.callGasLimit,f.verificationGasLimit=d.verificationGasLimit,f.preVerificationGas=d.preVerificationGas;else{const P=await I({options:a,userOp:f});if(f.callGasLimit=P.callGasLimit,f.verificationGasLimit=P.verificationGasLimit,f.preVerificationGas=P.preVerificationGas,p&&p!=="0x"){const g=await U({chain:v,client:A,entrypointAddress:i?.entrypointAddress,paymasterOverride:i?.paymaster,userOp:f}),G="paymasterAndData"in g?g.paymasterAndData:"0x";G&&G!=="0x"&&(f.paymasterAndData=G)}}}else{const d=await I({options:a,userOp:f});f.callGasLimit=d.callGasLimit,f.verificationGasLimit=d.verificationGasLimit,f.preVerificationGas=d.preVerificationGas}return{...f,signature:"0x"}}async function Et(e){const{userOp:a,chain:t,entrypointAddress:r,adminAccount:n}=e,s=await It({chain:t,client:e.client,entrypointAddress:r,userOp:a});if(n.signMessage){const c=await n.signMessage({chainId:t.id,message:{raw:fe(s)},originalMessage:Q(a)});return{...a,signature:c}}throw new Error("signMessage not implemented in signingAccount")}async function It(e){const{userOp:a,chain:t,entrypointAddress:r}=e,n=k(r||C);let s;if(n==="v0.7"){const c=Dt(a);s=await Tt({contract:T({address:r||ee,chain:t,client:e.client}),userOp:c})}else s=await At({contract:T({address:r||C,chain:t,client:e.client}),userOp:a});return s}async function Vt(e){const{factoryContract:a,adminAddress:t,accountSalt:r,createAccountOverride:n}=e,s=ae({accountSalt:r,adminAddress:t,createAccountOverride:n,factoryContract:a});return F([a.address,await H(s)])}async function Ut(e){const{accountContract:a,chain:t,client:r,entrypointAddress:n,getNonceOverride:s}=e;return s?s(a):await lt({contract:T({address:n||C,chain:t,client:r}),key:ge(),sender:a.address})}async function ce(e){const a=Date.now();for(;ie(e);){if(Date.now()-a>6e4)throw re(e),new Error("Account deployment is taking too long (over 1 minute). Please try again.");await new Promise(t=>setTimeout(t,500))}}const oe=new WeakMap,$=new WeakMap;async function Nt(e,a){const{personalAccount:t,client:r}=e;if(!t)throw new Error("No personal account provided for smart account connection");const n=a,s=a.chain,c="gasless"in n?n.gasless:n.sponsorGas;if(await Le(s))return[Ht({chain:s,connectionOptions:e,creationOptions:a,sponsorGas:c}),s];if(n.factoryAddress&&!n.overrides?.entrypointAddress){const o=await de(n.factoryAddress,r,s);o&&(n.overrides={...n.overrides,entrypointAddress:o})}n.overrides?.tokenPaymaster&&!n.overrides?.entrypointAddress&&(n.overrides={...n.overrides,entrypointAddress:ee});const i=n.factoryAddress??Oe(n.overrides?.entrypointAddress),u=T({address:i,chain:s,client:r}),m=await dt({accountAddress:n.overrides?.accountAddress,accountSalt:n.overrides?.accountSalt,adminAddress:t.address,factoryContract:u,predictAddressOverride:n.overrides?.predictAddress}).then(o=>o).catch(o=>{throw new Error(`Failed to get account address with factory contract ${u.address} on chain ID ${s.id}: ${o?.message||"unknown error"}`,{cause:o})}),y=T({address:m,chain:s,client:r}),l=await Rt({...n,accountContract:y,chain:s,client:r,factoryContract:u,personalAccount:t,sponsorGas:c});if(oe.set(t,l),$.set(l,t),n.sessionKey&&await it({accountContract:y,newPermissions:n.sessionKey.permissions,sessionKeyAddress:n.sessionKey.address})){const o=rt({account:t,contract:y,permissions:n.sessionKey.permissions,sessionKeyAddress:n.sessionKey.address});await De({account:l,transaction:o})}return[l,s]}async function $t(e){const a=$.get(e);a&&(oe.delete(a),$.delete(e))}async function Rt(e){const a=e.overrides?.tokenPaymaster;if(a&&k(e.overrides?.entrypointAddress||C)!=="v0.7")throw new Error("Token paymaster is only supported for entrypoint version v0.7");const t=e.sponsorGas;let r=e.accountContract;const n={address:te(r.address),async onTransactionRequested(s){return e.personalAccount.onTransactionRequested?.(s)},async sendBatchTransaction(s){const c=ut({accountContract:r,executeBatchOverride:e.overrides?.executeBatch,transactions:s});if(s.length===0)throw new Error("No transactions to send");const i=s[0];if(!i)throw new Error("No transactions to send");const u=E(i.chainId),m=await R({executeTx:c,options:{...e,accountContract:r,chain:u}});return V({chainId:u.id,client:e.client,contractAddress:s[0]?.to??void 0,transactionHash:m.transactionHash,walletAddress:e.accountContract.address,walletType:"smart"}),m},async sendTransaction(s){let c;if(a){await kt({accountContract:r,erc20Paymaster:a,options:e});const y=async()=>({paymaster:a.paymasterAddress,paymasterData:"0x"});c=e.overrides?.paymaster||y}else c=e.overrides?.paymaster;s.chainId!==r.chain.id&&(r=T({address:n.address,chain:E(s.chainId),client:e.client}));const i=se({accountContract:r,executeOverride:e.overrides?.execute,transaction:s}),u=E(s.chainId),m=await R({executeTx:i,options:{...e,accountContract:r,chain:u,overrides:{...e.overrides,paymaster:c}}});return V({chainId:u.id,client:e.client,contractAddress:s.to??void 0,transactionHash:m.transactionHash,walletAddress:e.accountContract.address,walletType:"smart"}),m},async signMessage({message:s}){if(e.overrides?.signMessage)return e.overrides.signMessage({accountContract:r,adminAccount:e.personalAccount,factoryContract:e.factoryContract,message:s});const{smartAccountSignMessage:c}=await x(async()=>{const{smartAccountSignMessage:i}=await import("./signing-McFo_90W.js");return{smartAccountSignMessage:i}},__vite__mapDeps([2,0,1,3,4,5,6]));return c({accountContract:r,factoryContract:e.factoryContract,message:s,options:e})},async signTypedData(s){if(e.overrides?.signTypedData)return e.overrides.signTypedData({accountContract:r,adminAccount:e.personalAccount,factoryContract:e.factoryContract,typedData:s});const{smartAccountSignTypedData:c}=await x(async()=>{const{smartAccountSignTypedData:i}=await import("./signing-McFo_90W.js");return{smartAccountSignTypedData:i}},__vite__mapDeps([2,0,1,3,4,5,6]));return c({accountContract:r,factoryContract:e.factoryContract,options:e,typedData:s})},sendCalls:async s=>{const{inAppWalletSendCalls:c}=await x(async()=>{const{inAppWalletSendCalls:l}=await import("./in-app-wallet-calls-DFChreyE.js");return{inAppWalletSendCalls:l}},__vite__mapDeps([7,0,1,8])),i=s.calls[0];if(!i)throw new Error("No calls to send");const u=i.client,m=i.chain||s.chain,y=await c({account:n,calls:s.calls});return{chain:m,client:u,id:y}},getCallsStatus:async s=>{const{inAppWalletGetCallsStatus:c}=await x(async()=>{const{inAppWalletGetCallsStatus:i}=await import("./in-app-wallet-calls-DFChreyE.js");return{inAppWalletGetCallsStatus:i}},__vite__mapDeps([7,0,1,8]));return c(s)},getCapabilities:async s=>({[s.chainId??1]:{atomic:{status:"supported"},paymasterService:{supported:t??!1}}})};return n}async function kt(e){const{accountContract:a,erc20Paymaster:t,options:r}=e,n=t.tokenAddress,s=T({address:n,chain:a.chain,client:a.client});if(await Me({contract:s,owner:a.address,spender:t.paymasterAddress})>0n)return;const i=ze({amountWei:ot-1n,contract:s,spender:t.paymasterAddress}),u=await _e({from:a.address,transaction:i}),m=se({accountContract:a,executeOverride:r.overrides?.execute,transaction:u});await R({executeTx:m,options:{...r,overrides:{...r.overrides,tokenPaymaster:void 0}}})}function Ht(e){const{creationOptions:a,connectionOptions:t,chain:r}=e,n={address:te(t.personalAccount.address),async onTransactionRequested(s){return t.personalAccount.onTransactionRequested?.(s)},async sendTransaction(s){const c={chain:E(s.chainId),client:t.client,data:s.data,eip712:s.eip712,to:s.to??void 0,value:s.value??0n};let i=await Ne({account:n,transaction:c});if(e.sponsorGas&&!i.paymaster){const y=await Ce({options:{bundlerUrl:a.overrides?.bundlerUrl,chain:r,client:t.client,entrypointAddress:a.overrides?.entrypointAddress},transaction:i});i={...i,...y}}const u=await $e({account:n,chainId:r.id,eip712Transaction:i}),m=await be({options:{bundlerUrl:a.overrides?.bundlerUrl,chain:r,client:t.client,entrypointAddress:a.overrides?.entrypointAddress},signedTransaction:u,transaction:i});return V({chainId:r.id,client:t.client,contractAddress:s.to??void 0,transactionHash:m.transactionHash,walletAddress:n.address,walletType:"smart"}),{chain:r,client:t.client,transactionHash:m.transactionHash}},async signMessage({message:s}){return t.personalAccount.signMessage({message:s})},async signTypedData(s){const c=Se(s);return t.personalAccount.signTypedData(c)},sendCalls:async s=>{const{inAppWalletSendCalls:c}=await x(async()=>{const{inAppWalletSendCalls:l}=await import("./in-app-wallet-calls-DFChreyE.js");return{inAppWalletSendCalls:l}},__vite__mapDeps([7,0,1,8])),i=s.calls[0];if(!i)throw new Error("No calls to send");const u=i.client,m=i.chain||s.chain,y=await c({account:n,calls:s.calls});return{chain:m,client:u,id:y}},getCallsStatus:async s=>{const{inAppWalletGetCallsStatus:c}=await x(async()=>{const{inAppWalletGetCallsStatus:i}=await import("./in-app-wallet-calls-DFChreyE.js");return{inAppWalletGetCallsStatus:i}},__vite__mapDeps([7,0,1,8]));return c(s)},getCapabilities:async s=>({[s.chainId??1]:{atomic:{status:"unsupported"},paymasterService:{supported:e.sponsorGas??!1}}})};return n}async function R(e){const{executeTx:a,options:t}=e;try{const r=await Ct({accountContract:t.accountContract,adminAddress:t.personalAccount.address,factoryContract:t.factoryContract,overrides:t.overrides,sponsorGas:t.sponsorGas,transaction:a}),n=await Et({adminAccount:t.personalAccount,chain:t.chain,client:t.client,entrypointAddress:t.overrides?.entrypointAddress,userOp:r}),s={bundlerUrl:t.overrides?.bundlerUrl,chain:t.chain,client:t.client,entrypointAddress:t.overrides?.entrypointAddress},c=await Fe({options:s,userOp:n}),i=await St({...s,userOpHash:c});return V({chainId:t.chain.id,client:t.client,contractAddress:await O(a.to??void 0),transactionHash:i.transactionHash,walletAddress:t.accountContract.address,walletType:"smart"}),{chain:t.chain,client:t.client,transactionHash:i.transactionHash}}catch(r){throw Ee(r)&&Ie({chainId:t.chain.id,client:t.client,contractAddress:await O(a.to??void 0),error:r,transactionValue:await O(a.value),walletAddress:t.accountContract.address}),r}finally{re(t.accountContract)}}async function de(e,a,t){const r=T({address:e,chain:t,client:a});try{return await L({contract:r,method:"function entrypoint() public view returns (address)"})}catch{return}}const qt=Object.freeze(Object.defineProperty({__proto__:null,connectSmartAccount:Nt,disconnectSmartAccount:$t,getEntrypointFromFactory:de,isSmartWallet:Ve},Symbol.toStringTag,{value:"Module"}));export{qt as i,ae as p};
