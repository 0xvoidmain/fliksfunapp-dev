import{e as _}from"./eth_sendRawTransaction-DPdnXbFR.js";import{ak as x,aQ as l,aR as L,u as v,aS as c,ah as B,h as z,aT as D,H as d,G as S,aU as M}from"./index-C4Of5rjp.js";import{concatHex as A}from"./concat-hex-XWm53NO0.js";import{m as $,s as H,t as O}from"./sha256-V8S2tZK3.js";const b=$*32n;class k extends x{constructor({givenLength:e,maxBytecodeSize:a}){super(`Bytecode cannot be longer than ${a} bytes. Given length: ${e}`,{name:"BytecodeLengthExceedsMaxSizeError"})}}class R extends x{constructor({givenLengthInWords:e}){super(`Bytecode length in 32-byte words must be odd. Given length in words: ${e}`,{name:"BytecodeLengthInWordsMustBeOddError"})}}class U extends x{constructor({givenLength:e}){super(`The bytecode length in bytes must be divisible by 32. Given length: ${e}`,{name:"BytecodeLengthMustBeDivisibleBy32Error"})}}function W(t){const e=l(t);if(e.length%32!==0)throw new U({givenLength:e.length});if(e.length>b)throw new k({givenLength:e.length,maxBytecodeSize:b});const a=H(e),n=l(a),s=e.length/32;if(s%2===0)throw new R({givenLengthInWords:s});const r=l(s),i=L(r,{size:2}),o=new Uint8Array([1,0]);return n.set(o,0),n.set(i,2),n}function h(t){if(["string","number"].includes(typeof t)&&!Number.isInteger(Number(t)))throw new Error(`Expected value to be an integer to convert to a bigint, got ${t} of type ${typeof t}`);return t instanceof Uint8Array?BigInt(v(t)):BigInt(t)}const P=(t,e)=>typeof t=="bigint"?e(t):Array.isArray(t)?t.map(a=>P(a,e)):t&&typeof t=="object"?Object.fromEntries(Object.entries(t).map(([a,n])=>[a,P(n,e)])):t,T=50000n,N=t=>{const e=V(t);return{domain:{chainId:t.chainId,name:"zkSync",version:"2"},message:e,primaryType:"Transaction",types:{Transaction:[{name:"txType",type:"uint256"},{name:"from",type:"uint256"},{name:"to",type:"uint256"},{name:"gasLimit",type:"uint256"},{name:"gasPerPubdataByteLimit",type:"uint256"},{name:"maxFeePerGas",type:"uint256"},{name:"maxPriorityFeePerGas",type:"uint256"},{name:"paymaster",type:"uint256"},{name:"nonce",type:"uint256"},{name:"value",type:"uint256"},{name:"data",type:"bytes"},{name:"factoryDeps",type:"bytes32[]"},{name:"paymasterInput",type:"bytes"}]}}};function V(t){const{gas:e,nonce:a,to:n,from:s,value:r,maxFeePerGas:i,maxPriorityFeePerGas:o,paymaster:m,paymasterInput:u,gasPerPubdata:y,data:p,factoryDeps:g}=t;return{data:p||"0x0",factoryDeps:g?.map(f=>c(W(f)))??[],from:BigInt(s),gasLimit:e??0n,gasPerPubdataByteLimit:y??T,maxFeePerGas:i??0n,maxPriorityFeePerGas:o??0n,nonce:a?BigInt(a):0n,paymaster:m?BigInt(m):0n,paymasterInput:u||"0x",to:n?BigInt(n):0n,txType:113n,value:r??0n}}async function C(t){const{account:e,transaction:a}=t,n=await w(t),s=await I({account:e,chainId:a.chain.id,eip712Transaction:n}),r=B(a),i=await _(r,s);return{chain:a.chain,client:a.client,transactionHash:i}}async function I(t){const{account:e,eip712Transaction:a,chainId:n}=t,s=N(a),r=await e.signTypedData({...s});return Q({...a,chainId:n,customSignature:r})}async function w(t){const{account:e,transaction:a}=t,{gas:n,maxFeePerGas:s,maxPriorityFeePerGas:r,gasPerPubdata:i}=await G({from:z(e.address),transaction:a});return{...await D({from:e.address,transaction:{...a,gas:n,maxFeePerGas:s,maxPriorityFeePerGas:r}}),...a.eip712,from:e.address,gasPerPubdata:i}}function Q(t){const{chainId:e,gas:a,nonce:n,to:s,from:r,value:i,maxFeePerGas:o,maxPriorityFeePerGas:m,customSignature:u,factoryDeps:y,paymaster:p,paymasterInput:g,gasPerPubdata:f,data:E}=t,F=[n?c(n):"0x",m?c(m):"0x",o?c(o):"0x",a?c(a):"0x",s??"0x",i?c(i):"0x",E??"0x0",c(e),c(""),c(""),c(e),r??"0x",f?c(f):c(T),y??[],u??"0x",p&&g?[p,g]:[]];return A(["0x71",O(F)])}async function G(t){const{transaction:e,from:a}=t;let[n,s,r,i]=await Promise.all([d(e.gas),d(e.maxFeePerGas),d(e.maxPriorityFeePerGas),d(e.eip712)]),o=i?.gasPerPubdata;if(n===void 0||s===void 0||r===void 0){const m=B(e),u=await Z({from:a,transaction:e}),y=await m({method:"zks_estimateFee",params:[P(u,c)]});n=h(y.gas_limit)*2n,s=h(y.max_fee_per_gas)*2n,r=h(y.max_priority_fee_per_gas)||1n,o=h(y.gas_per_pubdata_limit)*2n,o<50000n&&(o=50000n)}return{gas:n,gasPerPubdata:o,maxFeePerGas:s,maxPriorityFeePerGas:r}}async function Z(t){const{transaction:e,from:a}=t,[n,s,r,i]=await Promise.all([S(e),d(e.to),d(e.value),d(e.eip712)]),o=i?.gasPerPubdata;return{data:n,eip712Meta:{...i,factoryDeps:i?.factoryDeps?.map(m=>Array.from(M(m))),gasPerPubdata:o||50000n},from:a,gasPerPubdata:o,to:s,type:"0x71",value:r}}const Y=Object.freeze(Object.defineProperty({__proto__:null,getZkGasFees:G,populateEip712Transaction:w,sendEip712Transaction:C,signEip712Transaction:I},Symbol.toStringTag,{value:"Module"}));export{Y as a,w as p,I as s,h as t};
